{"version":3,"sources":["components/HOC/privateRoute.js","urlConfig.js","components/Search/useQuestionSearch.js","components/Search/index.js","constants.js","components/Header/index.js","components/Layout/index.js","utils/asyncSubscriptionCancel.js","components/Profile/index.js","utils/date.js","pages/Home/index.js","pages/Home/useQuestion.js","pages/Signin/index.js","pages/Signup/index.js","utils/user.action.js","utils/swal.js","pages/Question/index.js","pages/PostQuestion/index.js","pages/Category/index.js","pages/UserQuestion/index.js","pages/UserSolution/index.js","pages/UserComment/index.js","App.js","reportWebVitals.js","reducers/auth.reducer.js","reducers/category.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["PrivateRoute","Component","component","rest","props","JSON","parse","window","sessionStorage","getItem","to","api","UseQuestionSearch","query","pageNumber","useState","loading","setLoading","error","setError","questions","setQuestions","hasMore","setHasMore","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","prevQ","Set","data","results","map","ques","length","catch","e","isCancel","Search","setQuery","setPageNumber","observer","useRef","lastQuestionRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","style","position","placeholder","value","onChange","target","fontSize","width","borderRadius","padding","outline","border","borderBottomLeftRadius","borderBottomRightRadius","className","idx","type","slug","replace","ref","title","name","dangerouslySetInnerHTML","__html","description","_id","categoryConstants","userConstants","Header","auth","useSelector","state","dispatch","useDispatch","location","useLocation","pathname","Toast","Swal","mixin","toast","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","handleSignout","post","clear","reload","fire","icon","message","response","Box","sx","flexGrow","AppBar","marginBottom","Toolbar","IconButton","size","edge","mr","Typography","variant","Link","href","textDecoration","color","authenticate","display","xs","md","Button","fontWeight","margin","backgroundColor","onClick","Layout","children","useIsMountedRef","isMountedRef","React","Profile","user","setUser","console","log","setItem","stringify","commentId","solutionId","questionId","payload","err","top","flexDirection","alignItems","Avatar","height","mt","fullName","mb","username","borderTop","m","bgcolor","purple","faQuestion","faLightbulb","faComments","getLongDate","d","arr","Date","toString","split","Home","setValue","filter","setFilter","question","prevq","q","useQuestion","addFilter","filterName","getAttribute","Grid","container","item","borderLeft","justifyContent","ButtonGroup","index","Card","maxWidth","CardHeader","avatar","red","authorID","charAt","subheader","createdAt","CardContent","theme","createTheme","SignIn","email","setEmail","password","setPassword","ThemeProvider","Container","CssBaseline","marginTop","onSubmit","event","preventDefault","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","Signup","setFullname","setUsername","transition","setTransition","category","history","useHistory","setTimeout","transitionStyle","transform","opacity","left","right","alignSelf","zIndex","handleSubmit","a","categoryId","document","querySelectorAll","forEach","ele","push","minHeight","spacing","sm","flexWrap","categories","cat","FormGroup","FormControlLabel","control","Checkbox","Question","useParams","setQuestion","editorData","setEditorData","comments","setComments","reply","setReply","Lottie","loadAnimation","getElementById","renderer","loop","autoplay","animationData","require","rendererSettings","postReply","sol","getElementsByTagName","overflow","solId","comment","removeAttribute","showReply","s","tid","solution","commentsId","mx","gutterBottom","scrollTo","body","scrollHeight","background","handleReply","List","marginLeft","ListItem","divider","ListItemAvatar","alt","ListItemText","primary","Fragment","secondary","hideReply","apiKey","process","init","content_css","menubar","plugins","toolbar","onEditorChange","content","editor","bottom","PostQuestion","setTitle","setCategory","loadEditor","setLoadEditor","Category","UserQuestion","UserSolution","solutions","setSolutions","returnShortString","ans","i","UserComment","App","parseUser","path","exact","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authenticating","authReducer","action","categoryReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d5e9d28e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\tcomponent={(props) => {\r\n\t\t\t\tconst tokenObj = JSON.parse(\r\n\t\t\t\t\twindow.sessionStorage.getItem(\"user\")\r\n\t\t\t\t);\r\n\t\t\t\tif (tokenObj) {\r\n\t\t\t\t\treturn <Component {...props} />;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <Redirect to={`/signin`} />;\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n","export const api = \"https://peaceful-fortress-48629.herokuapp.com/api\";\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\nconst UseQuestionSearch = (query, pageNumber) => {\r\n\r\n      const [loading, setLoading] = useState(true);\r\n      const [error, setError] = useState(false);\r\n      const [questions, setQuestions] = useState([])\r\n      const [hasMore, setHasMore] = useState(false);\r\n\r\n\r\n      useEffect(() => {\r\n            setQuestions([])\r\n      }, [query])\r\n\r\n      useEffect(() => {\r\n            setLoading(true);\r\n            setError(false);\r\n            let cancel;\r\n            axios\r\n                  .get(\r\n                        `${api}/search?search=${query}&page=${pageNumber}`,\r\n                        {\r\n\r\n                              cancelToken: new axios.CancelToken(c => cancel = c),\r\n\r\n                        },\r\n                  )\r\n                  .then((res) => {\r\n                        setQuestions(prevQ => {\r\n                              return [...new Set([...prevQ, ...res.data.results.map(ques => ques)])];\r\n                        })\r\n                        setHasMore(res.data.results.length > 0)\r\n                        setLoading(false);\r\n                  })\r\n                  .catch((e) => {\r\n                        if (axios.isCancel(e)) return;\r\n                        setError(true);\r\n                  });\r\n\r\n            return () => cancel();\r\n      }, [query, pageNumber]);\r\n\r\n      return { loading, error, hasMore, questions };\r\n};\r\n\r\nexport default UseQuestionSearch;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport UseQuestionSearch from './useQuestionSearch';\r\n\r\nconst Search = () => {\r\n      const [query, setQuery] = useState(\"\");\r\n      const [pageNumber, setPageNumber] = useState(1);\r\n\r\n      const { loading, error, hasMore, questions } = UseQuestionSearch(query, pageNumber);\r\n\r\n      const observer = useRef()\r\n      const lastQuestionRef = useCallback((node) => {\r\n            if (observer.current) observer.current.disconnect();\r\n            observer.current = new IntersectionObserver((entries) => {\r\n                  if (entries[0].isIntersecting && hasMore) {\r\n                        setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n                  }\r\n            });\r\n            if (node) observer.current.observe(node);\r\n      },\r\n            [loading, hasMore]\r\n      )\r\n\r\n      function handleSearch(e) {\r\n            setQuery(e.target.value);\r\n            setPageNumber(1);\r\n      }\r\n\r\n      return (\r\n            <div>\r\n                  <div style={{\r\n                        position: 'relative',\r\n                        // top: 0\r\n                  }}>\r\n                        <input placeholder=\"Search\" value={query} onChange={handleSearch} style={{ fontSize: '16px', width: '500px', borderRadius: '8px', padding: '0.4rem 1rem', outline: 'none', border: '1px solid #e1e1e1', borderBottomLeftRadius: query === '' || questions.length < 1 ? 8 : 0, borderBottomRightRadius: query === '' || questions.length < 1 ? 8 : 0 }} />\r\n                  </div>\r\n                  {query === '' || questions.length < 1 ? null : <div className=\"searchScroll\">\r\n                        {questions.map((ques, idx) => {\r\n                              if (idx + 1 === questions.length) {\r\n                                    return <Link to={`/${ques.type}/${ques.slug}`} replace ref={lastQuestionRef} key={ques._id} >\r\n                                          <div className=\"box\">\r\n                                                <h6>{ques.type === 'question' ? ques.title : ques.name}</h6>\r\n                                                {ques.type === 'question' ? <p dangerouslySetInnerHTML={{\r\n                                                      __html: ques.description,\r\n                                                }} /> : null}\r\n                                          </div>\r\n\r\n\r\n                                    </Link>\r\n                              } else {\r\n                                    return <Link to={`/${ques.type}/${ques.slug}`} key={ques._id} replace>\r\n                                          <div className=\"box\">\r\n                                                <h6>{ques.type === 'question' ? ques.title : ques.name}</h6>\r\n                                                {ques.type === 'question' ? <p dangerouslySetInnerHTML={{\r\n                                                      __html: ques.description,\r\n                                                }} /> : null}\r\n                                          </div>\r\n\r\n\r\n                                    </Link>\r\n                              }\r\n                        })}\r\n                  </div>}\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n      );\r\n}\r\n\r\nexport default Search;\r\n","export const categoryConstants = {\r\n\tGET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\r\n\tGET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\r\n\tGET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\r\n\tCREATE_CATEGORY_REQUEST: \"CREATE_CATEGORY_REQUEST\",\r\n\tCREATE_CATEGORY_SUCCESS: \"CREATE_CATEGORY_SUCCESS\",\r\n\tCREATE_CATEGORY_FAILURE: \"CREATE_CATEGORY_FAILURE\",\r\n};\r\n\r\nexport const userConstants = {\r\n\tSIGNUP_REQUEST: \"SIGNUP_REQUEST\",\r\n\tSIGNUP_SUCCESS: \"SIGNUP_SUCCESS\",\r\n\tSIGNUP_FAILURE: \"SIGNUP_FAILURE\",\r\n\tSIGNIN_REQUEST: \"SIGNIN_REQUEST\",\r\n\tSIGNIN_SUCCESS: \"SIGNIN_SUCCESS\",\r\n\tSIGNIN_FAILURE: \"SIGNIN_FAILURE\",\r\n\tSIGNOUT_SUCCESS: \"SIGNOUT_SUCCESS\",\r\n\tSIGNOUT_FAILURE: \"SIGNOUT_FAILURE\",\r\n\tUSER_UPDATE: \"USER_UPDATE\"\r\n\r\n};\r\n\r\n\r\n","import React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Link from \"@mui/material/Link\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport Search from '../Search';\r\nimport axios from 'axios';\r\nimport { api } from '../../urlConfig';\r\nimport { userConstants } from \"../../constants\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport default function Header() {\r\n\tconst auth = useSelector((state) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst location = useLocation().pathname === \"/signin\" ? `signin` : `signup`;\r\n\r\n\tconst Toast = Swal.mixin({\r\n\t\ttoast: true,\r\n\t\tposition: \"top-end\",\r\n\t\tshowConfirmButton: false,\r\n\t\ttimer: 10000,\r\n\t\ttimerProgressBar: true,\r\n\t\tdidOpen: (toast) => {\r\n\t\t\ttoast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n\t\t\ttoast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleSignout = () => {\r\n\t\taxios.post(`${api}/signout`).then((res) => {\r\n\t\t\twindow.sessionStorage.clear();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNOUT_SUCCESS,\r\n\r\n\t\t\t});\r\n\t\t\twindow.location.reload();\r\n\r\n\t\t\tToast.fire({\r\n\t\t\t\ticon: \"success\",\r\n\t\t\t\ttitle: res.data.message,\r\n\t\t\t});\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNOUT_FAILURE,\r\n\r\n\t\t\t});\r\n\t\t\tToast.fire({\r\n\t\t\t\ticon: \"error\",\r\n\t\t\t\ttitle: error.response.data.message,\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tconst renderLoggedInLinks = () => {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\thref=\"#\"\r\n\t\t\t\tvariant=\"body2\"\r\n\t\t\t\tstyle={{ textDecoration: \"none\", fontWeight: \"bold\", color: 'white' }}\r\n\t\t\t\tonClick={handleSignout}\r\n\t\t\t>\r\n\t\t\t\tSIGNOUT\r\n\t\t\t</Link>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderNonLoggedInLinks = () => {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\thref={location === \"signin\" ? `/signup` : `/signin`}\r\n\t\t\t\tvariant=\"body2\"\r\n\t\t\t\tstyle={{ textDecoration: \"none\", fontWeight: \"bold\", color: 'white' }}\r\n\t\t\t>\r\n\t\t\t\t{location === \"signin\" ? \"SIGNUP\" : \"SIGNIN\"}\r\n\t\t\t</Link>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Box sx={{ flexGrow: 1 }} >\r\n\t\t\t<AppBar\r\n\t\t\t\tposition=\"static\"\r\n\t\t\t\tstyle={{ marginBottom: '10px', padding: '0 100px' }}\r\n\r\n\t\t\t>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\taria-label=\"menu\"\r\n\r\n\t\t\t\t\t\tsx={{ mr: 2 }}\r\n\t\t\t\t\t></IconButton>\r\n\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1 }}\r\n\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link href=\"/\" style={{ textDecoration: 'none', color: 'white' }}>Out Of Memory?</Link>\r\n\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{auth.authenticate ? <Search /> : null}\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tdisplay: { xs: \"none\", md: \"flex\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{auth.authenticate ? (\r\n\t\t\t\t\t\t\t<Link href='/postquestion' style={{ textDecoration: 'none' }}><Button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\tmargin: \"20px\",\r\n\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'white'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAsk a Question ?\r\n\t\t\t\t\t\t\t</Button></Link>\r\n\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t{auth.authenticate\r\n\t\t\t\t\t\t? renderLoggedInLinks()\r\n\t\t\t\t\t\t: renderNonLoggedInLinks()}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t</Box >\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport Box from '@mui/material/Box';\r\nimport './style.css'\r\n\r\nexport default function Layout(props) {\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Header></Header>\r\n\t\t\t<Box>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Box>\r\n\t\t</Box >\r\n\t);\r\n}","import React from 'react'\r\n\r\nfunction useIsMountedRef() {\r\n      const isMountedRef = React.useRef(null);\r\n      React.useEffect(() => {\r\n            isMountedRef.current = true;\r\n            return () => isMountedRef.current = false;\r\n      });\r\n      return isMountedRef;\r\n}\r\n\r\nexport default useIsMountedRef;","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Typography, Box } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faComments, faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport { purple } from '@mui/material/colors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport { api } from '../../urlConfig';\r\nimport axios from 'axios';\r\nimport { userConstants } from '../../constants';\r\n\r\nconst Profile = () => {\r\n\r\n      const [user, setUser] = useState(JSON.parse(window.sessionStorage.getItem(\"user\")));\r\n\r\n      const isMountedRef = useIsMountedRef();\r\n      const dispatch = useDispatch();\r\n      const auth = useSelector(state => state.auth);\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/getUserInfo`).then((res) => {\r\n                  console.log(res.data.user);\r\n                  if (isMountedRef.current) {\r\n                        setUser(res.data.user);\r\n                        window.sessionStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n\r\n                  }\r\n\r\n                  if (auth.user.commentId.length !== res.data.user.commentId.length ||\r\n                        auth.user.solutionId.length !== res.data.user.solutionId.length ||\r\n                        auth.user.questionId.length !== res.data.user.questionId.length) {\r\n                        dispatch({\r\n                              type: userConstants.USER_UPDATE,\r\n                              payload: {\r\n                                    user: user,\r\n                              },\r\n                        });\r\n\r\n\r\n                  }\r\n            }).catch((err) => {\r\n                  console.log(err);\r\n\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Box position=\"fixed\" top=\"25%\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" border='1px solid #e1e1e1' padding='10px' borderRadius=\"10px\">\r\n                  <Avatar sx={{ width: 100, height: 100 }}> P</Avatar>\r\n                  <Typography mt={2} variant=\"h5\">\r\n                        {user && `${user.fullName}`}\r\n                  </Typography>\r\n                  <Typography mb={4} variant=\"subtitle\">\r\n                        {user && `@${user.username}`}\r\n                  </Typography>\r\n                  <Box borderTop=\"1px solid #e1e1e1\" display=\"flex\" >\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faQuestion} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.questionId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    Questions\r\n                              </Typography>\r\n\r\n                        </Box >\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faLightbulb} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.solutionId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    Solutions\r\n                              </Typography>\r\n                        </Box>\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faComments} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.commentId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    Comments\r\n                              </Typography>\r\n                        </Box>\r\n                  </Box>\r\n                  <Box width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/questions'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Questions\r\n                                    </Typography></Link>\r\n\r\n                        </Box>\r\n\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/solutions'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Solutions\r\n                                    </Typography></Link>\r\n                        </Box>\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/comments'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Comments\r\n                                    </Typography></Link>\r\n                        </Box>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n            </Box>\r\n      );\r\n}\r\n\r\nexport default Profile;\r\n","const getLongDate = (d) => {\r\n      const date = new Date(d)\r\n      const arr = date.toString().split(\" \");\r\n      return `${arr[1]} ${arr[2]}, ${arr[3]}`\r\n}\r\n\r\nexport default getLongDate;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Layout from \"../../components/Layout\";\r\nimport useQuestion from \"./useQuestion\";\r\nimport './style.css';\r\nimport { Avatar, Card, CardContent, CardHeader, Typography } from \"@mui/material\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport Profile from \"../../components/Profile\";\r\nimport getLongDate from \"../../utils/date\";\r\n\r\n\r\nexport default function Home() {\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst [value, setValue] = useState(0);\r\n\tconst [filter, setFilter] = useState(false);\r\n\tconst [query, setQuery] = useState(\"none\");\r\n\tconst { question, hasMore, loading, error } = useQuestion(pageNumber, query, value);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPageNumber(1);\r\n\t}, []);\r\n\r\n\tconst observer = useRef();\r\n\tconst lastQuestionRef = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tif (entries[0].isIntersecting && hasMore) {\r\n\t\t\t\t\tsetPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) observer.current.observe(node);\r\n\t\t},\r\n\t\t[loading, hasMore]\r\n\t);\r\n\r\n\tconst addFilter = (e, filterName) => {\r\n\r\n\t\tsetFilter(filterName)\r\n\t\tsetValue(e.target.getAttribute('value'));\r\n\t\tsetQuery(e.target.getAttribute('query'));\r\n\t\tsetPageNumber(1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div>\r\n\t\t\t\t<Box sx={{ flexGrow: 1 }}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid display=\"flex\" flexDirection=\"column\" alignItems=\"center\" item xs={12} md={3}>\r\n\t\t\t\t\t\t\t<Profile />\r\n\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t\t\t\t<Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\" }}>\r\n\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup variant=\"outlined\" aria-label=\"outlined primary button group\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'most-answered')} variant={filter === 'most-answered' ? 'contained' : ''} value={-1} query=\"solution\">Mostly Answered</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'least-answered')} variant={filter === 'least-answered' ? 'contained' : ''} value={1} query=\"solution\">Least Answered</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'most-recent')} variant={filter === 'most-recent' ? 'contained' : ''} value={-1} query=\"createdAt\">Most Recent</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'least-recent')} variant={filter === 'least-recent' ? 'contained' : ''} value={1} query=\"createdAt\">Least Recent</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"homeContainer\">\r\n\t\t\t\t\t\t\t\t\t{question.map((q, index) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (question.length === index + 1) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none' }} className=\"homeLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card sx={{ maxWidth: 345 }} ref={lastQuestionRef}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.authorID.fullName.charAt(0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={q.authorID.fullName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubheader={getLongDate(q.createdAt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className=\"cardDescription\" variant=\"body2\" color=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__html: q.description,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.solutionId.length} solutions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none' }} className=\"homeLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card sx={{ maxWidth: 345 }} className=\"homeCard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.authorID.fullName.charAt(0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={q.authorID.fullName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubheader={getLongDate(q.createdAt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__html: q.description,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.solutionId.length} solutions\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <div>{loading && \"Loading...\"}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{error && \"Error\"}</div> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</Layout >\r\n\t);\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\nexport default function useQuestion(pageNumber, query, value) {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [question, setQuestions] = useState([]);\r\n\tconst [hasMore, setHasMore] = useState(false);\r\n\r\n\tconst auth = useSelector((state) => {\r\n\t\treturn state.auth;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetQuestions([]);\r\n\t}, [query, value]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (auth.user._id) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(false);\r\n\t\t\tlet cancel;\r\n\t\t\taxios\r\n\t\t\t\t.get(\r\n\t\t\t\t\t`${api}/getquestions?id=${auth.user._id}&page=${pageNumber}&query=${query}&value=${value}`,\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetQuestions((prevq) => {\r\n\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t...new Set([\r\n\t\t\t\t\t\t\t\t...prevq,\r\n\t\t\t\t\t\t\t\t...res.data.questions.map((q) => q),\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetHasMore(res.data.questions.length > 0);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tif (axios.isCancel(e)) return;\r\n\t\t\t\t\tsetError(true);\r\n\t\t\t\t});\r\n\t\t\treturn () => cancel();\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}, [pageNumber, query, value]);\r\n\r\n\treturn { loading, error, question, hasMore };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { userConstants } from \"../../constants\";\r\nimport { Redirect } from \"react-router\";\r\nimport { api } from \"../../urlConfig\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst auth = useSelector((state) => state.auth);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tif (auth.authenticate) {\r\n\t\treturn <Redirect to={`/`} />;\r\n\t}\r\n\r\n\tconst Toast = Swal.mixin({\r\n\t\ttoast: true,\r\n\t\tposition: \"top-end\",\r\n\t\tshowConfirmButton: false,\r\n\t\ttimer: 10000,\r\n\t\ttimerProgressBar: true,\r\n\t\tdidOpen: (toast) => {\r\n\t\t\ttoast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n\t\t\ttoast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n\t\t},\r\n\t});\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst user = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t};\r\n\r\n\t\taxios\r\n\t\t\t.post(`${api}/signin`, user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { user } = res.data;\r\n\t\t\t\twindow.sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNIN_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tuser: user,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\ttitle: res.data.message,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNIN_FAILURE,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\terror: error.response.data,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\ttitle: error.response.data.message,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tmarginTop: 8,\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"form\"\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\tsx={{ mt: 1 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t{\"Don't have an account? Sign Up\"}\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Link from \"@mui/material/Link\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Checkbox, FormControlLabel, FormGroup } from \"@mui/material\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport Swal from \"sweetalert2\";\r\nimport axios from 'axios';\r\nimport { userConstants } from \"../../constants\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function Signup() {\r\n\tconst [fullName, setFullname] = useState(\"\");\r\n\tconst [username, setUsername] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [transition, setTransition] = useState(false);\r\n\tconst auth = useSelector((state) => state.auth);\r\n\tconst category = useSelector((state) => {\r\n\t\treturn state.category;\r\n\t});\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\tuseEffect(() => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tsetTransition(true);\r\n\t\t}, 200);\r\n\t}, []);\r\n\r\n\tif (auth.authenticate) {\r\n\t\treturn <Redirect to={`/`} />;\r\n\t}\r\n\r\n\tconst Toast = Swal.mixin({\r\n\t\ttoast: true,\r\n\t\tposition: \"top-end\",\r\n\t\tshowConfirmButton: false,\r\n\t\ttimer: 10000,\r\n\t\ttimerProgressBar: true,\r\n\t\tdidOpen: (toast) => {\r\n\t\t\ttoast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n\t\t\ttoast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n\t\t},\r\n\t});\r\n\r\n\tconst transitionStyle = {\r\n\t\ttransform: \"translateX(0)\",\r\n\t\topacity: 1,\r\n\t\ttransition: \"all 1s ease\",\r\n\t\tposition: \"absolute\",\r\n\t\ttop: 0,\r\n\t\tleft: 0,\r\n\t\tright: 0,\r\n\t\tmargin: \"auto\",\r\n\t\talignSelf: \"center\",\r\n\t\tzIndex: 2,\r\n\t};\r\n\r\n\tconst renderCategories = () => {\r\n\t\treturn (\r\n\t\t\t<Box\r\n\t\t\t\tsx={{\r\n\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\tflexWrap: \"wrap\",\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{category.categories.length > 0\r\n\t\t\t\t\t? category.categories.map((cat) => (\r\n\t\t\t\t\t\t<FormGroup>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={<Checkbox />}\r\n\t\t\t\t\t\t\t\tlabel={cat.name}\r\n\t\t\t\t\t\t\t\tvalue={cat._id}\r\n\t\t\t\t\t\t\t\tkey={cat._id}\r\n\t\t\t\t\t\t\t></FormControlLabel>\r\n\t\t\t\t\t\t</FormGroup>\r\n\t\t\t\t\t))\r\n\t\t\t\t\t: null}\r\n\t\t\t</Box>\r\n\t\t);\r\n\t};\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tconst categoryId = [];\r\n\t\tdocument\r\n\t\t\t.querySelectorAll(\"input[type=checkbox]:checked\")\r\n\t\t\t.forEach((ele) => categoryId.push(ele.getAttribute(\"value\")));\r\n\r\n\t\tconst user = {\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tusername,\r\n\t\t\tcategoryId,\r\n\t\t};\r\n\r\n\t\taxios\r\n\t\t\t.post(`${api}/signup`, user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { message } = res.data;\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNUP_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmessage: message,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\thistory.push(\"/signin\");\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\ttitle: res.data.message,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNUP_FAILURE,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\terror: error.response.data.message,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\ttitle: error.response.data.message,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\tminHeight: \"80vh\",\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Container\r\n\t\t\t\t\t\tcomponent=\"main\"\r\n\t\t\t\t\t\tmaxWidth=\"xs\"\r\n\t\t\t\t\t\tid=\"signup-container\"\r\n\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\t!transition\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\ttransform: \"translateX(-300px)\",\r\n\t\t\t\t\t\t\t\t\topacity: \"0\",\r\n\t\t\t\t\t\t\t\t\ttransition: \"all 1s ease\",\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t: { ...transitionStyle, transition: \"none\" }\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tmarginTop: 8,\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tcomponent=\"form\"\r\n\t\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\t\t// onSubmit={handleSubmit}}\r\n\t\t\t\t\t\t\t\tsx={{ mt: 3 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"fullname\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"fullName\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Full Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFullname(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12} sm={6}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={username}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetUsername(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\r\n\t\t\t\t\t\t\t\t\tonClick={() => setTransition(false)}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tNext\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\r\n\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/signin\" variant=\"body2\">\r\n\t\t\t\t\t\t\t\t\t\t\tAlready have an account? Sign in\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t\t<Container\r\n\t\t\t\t\t\tid=\"category-container\"\r\n\t\t\t\t\t\tstyle={\r\n\t\t\t\t\t\t\ttransition\r\n\t\t\t\t\t\t\t\t? {\r\n\t\t\t\t\t\t\t\t\ttransform: \"translateX(300px)\",\r\n\t\t\t\t\t\t\t\t\topacity: \"0\",\r\n\t\t\t\t\t\t\t\t\ttransition: \"none\",\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t: {\r\n\t\t\t\t\t\t\t\t\t...transitionStyle,\r\n\t\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Grid\r\n\t\t\t\t\t\t\tcontainer\r\n\t\t\t\t\t\t\tjustifyContent=\"center\"\r\n\t\t\t\t\t\t\tmargin=\"15px auto\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\tPlease choose atleast three categories\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t{renderCategories()}\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2, padding: \"0.5rem 3rem\" }}\r\n\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n","import { userConstants } from \"../constants\";\r\n\r\nexport const isUserLoggedIn = () => {\r\n\treturn async (dispatch) => {\r\n\r\n\t\tconst user = window.sessionStorage.getItem(\"user\");\r\n\t\tif (user) {\r\n\t\t\tconst parseUser = JSON.parse(user);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNIN_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser: parseUser,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNIN_FAILURE,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\terror: \"Failed to login\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n","import Swal from \"sweetalert2\";\r\n\r\nconst Toast = Swal.mixin({\r\n\ttoast: true,\r\n\tposition: \"top-end\",\r\n\tshowConfirmButton: false,\r\n\ttimer: 10000,\r\n\ttimerProgressBar: true,\r\n\tdidOpen: (toast) => {\r\n\t\ttoast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n\t\ttoast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n\t},\r\n});\r\n\r\nexport default Toast;\r\n","import { TextField, Typography, Button, Avatar } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Layout from \"../../components/Layout\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport axios from \"axios\";\r\nimport Lottie from \"lottie-web\";\r\nimport Toast from \"../../utils/swal\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\n\r\nexport default function Question() {\r\n      const slug = useParams().slug;\r\n      const [question, setQuestion] = useState(null);\r\n      const [loading, setLoading] = useState(true);\r\n      const [editorData, setEditorData] = useState(\"\");\r\n      const [comments, setComments] = useState([]);\r\n      const [reply, setReply] = useState(\"\");\r\n\r\n      useEffect(async () => {\r\n            await axios\r\n                  .get(`${api}/question?slug=${slug}`)\r\n                  .then((res) => {\r\n                        setQuestion(res.data.question);\r\n                  })\r\n                  .catch((error) => {\r\n                        console.log(error);\r\n                  });\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n            Lottie.loadAnimation({\r\n                  container: document.getElementById(\"lottieweb\"),\r\n                  renderer: \"svg\",\r\n                  loop: true,\r\n                  autoplay: true,\r\n                  animationData: require(\"../../images/84860-my-first-ever-lottie.json\"),\r\n                  rendererSettings: {\r\n                        className: \"lottieRenderer\",\r\n                  },\r\n            });\r\n      }, []);\r\n\r\n\r\n      const handleChange = (content, editor) => {\r\n            setEditorData(content);\r\n      };\r\n\r\n      const handleReply = (e) => {\r\n            const id = e.target.className;\r\n            question.solutionId.map((s) => {\r\n                  let tid = s._id;\r\n                  document.getElementById(tid).style.display = 'none';\r\n            })\r\n            setReply(\"\");\r\n            document.getElementById(id).style.display = 'block';\r\n\r\n      }\r\n\r\n      const hideReply = (e) => {\r\n            const id = e.target.value;\r\n            document.getElementById(id).style.display = 'none';\r\n      }\r\n\r\n      const scrollToBottom = () => {\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n      };\r\n\r\n      const postReply = async (e, sol) => {\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n\r\n            setLoading(false);\r\n            e.preventDefault();\r\n            const solId = e.target.value;\r\n            const comment = {\r\n                  description: reply,\r\n                  solutionId: solId,\r\n            }\r\n            await axios.post(`${api}/:${solId}/addComment`, comment).then((res) => {\r\n                  document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                  setLoading(true);\r\n            })\r\n\r\n            document.getElementById(solId).style.display = 'none';\r\n\r\n\r\n      }\r\n\r\n      const showReply = async (e) => {\r\n            setComments([]);\r\n            const id = e.target.className;\r\n            question.solutionId.map((s) => {\r\n                  let tid = s._id;\r\n                  document.getElementById(tid).style.display = 'none';\r\n            })\r\n            setReply(\"\");\r\n            document.getElementById(id).style.display = 'block';\r\n            await axios.get(`${api}/solution?id=${id}`).then((res) => {\r\n                  setComments(res.data.solution.commentsId)\r\n            })\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n\r\n            const sol = {\r\n                  questionId: question._id,\r\n                  description: editorData,\r\n                  question: question,\r\n            };\r\n\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n\r\n            setLoading(false);\r\n            axios\r\n                  .post(`${api}/:${question._id}/addSolution`, sol)\r\n                  .then((res) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"success\",\r\n                              title: res.data.message,\r\n                        });\r\n                  })\r\n                  .catch((error) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: error.response.data.message,\r\n                        });\r\n                  });\r\n      };\r\n\r\n      return (\r\n            <Layout>\r\n                  <Box mx={10}>\r\n                        <Box\r\n                              style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginTop: \"50px\",\r\n                              }}\r\n                              mx={10}\r\n                        >\r\n                              <Typography\r\n                                    gutterBottom\r\n                                    variant=\"h5\"\r\n                                    component=\"div\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n                              >\r\n                                    {question === null ? \"\" : question.title}\r\n                              </Typography>\r\n                              <Button\r\n                                    onClick={scrollToBottom}\r\n                                    style={{\r\n                                          background: \"#1976d2\",\r\n                                          color: \"#fff\",\r\n                                          fontWeight: \"bold\",\r\n                                    }}\r\n                              >\r\n                                    Post a Solution\r\n                              </Button>\r\n                        </Box>\r\n                        <hr />\r\n                        {question === null ? (\r\n                              \"\"\r\n                        ) : (\r\n                              <Box\r\n                                    dangerouslySetInnerHTML={{\r\n                                          __html: question.description,\r\n                                    }}\r\n                                    mx={10}\r\n                              />\r\n                        )}\r\n                        {question === null ? (\r\n                              \"\"\r\n                        ) : (\r\n                              <Box mx={10}>\r\n                                    <Box\r\n                                          style={{\r\n                                                display: \"flex\",\r\n                                                width: \"100%\",\r\n                                                alignItems: \"end\",\r\n                                                flexDirection: \"column\",\r\n                                          }}\r\n                                    >\r\n                                          <h5>Posted By</h5>\r\n                                          <p style={{ margin: 0 }}>{question.authorID.fullName}</p>\r\n                                          <p>{question.authorID.email}</p>\r\n                                    </Box>\r\n                              </Box>\r\n                        )}\r\n                        <br />\r\n                        {question && question.solutionId.length > 0 ? (\r\n                              <Box mx={10}>\r\n                                    <h3>\r\n                                          Looking for the same question ? Go through some of the answers\r\n                                          below...!\r\n                                    </h3>\r\n                                    <h4>\r\n                                          {\" \"}\r\n                                          {question.solutionId.length === 1\r\n                                                ? `${question.solutionId.length} Answer`\r\n                                                : `${question.solutionId.length} Answers`}\r\n                                    </h4>\r\n                                    <br />\r\n                                    {question.solutionId.map((sol) => (\r\n                                          <Box key={sol._id}>\r\n                                                <Box variant=\"body2\" color=\"text.secondary\">\r\n                                                      <Box\r\n                                                            dangerouslySetInnerHTML={{\r\n                                                                  __html: sol.description,\r\n                                                            }}\r\n                                                      />\r\n                                                </Box>\r\n                                                <Box\r\n                                                      style={{\r\n                                                            display: \"flex\",\r\n                                                            width: \"100%\",\r\n                                                            justifyContent: \"space-between\"\r\n                                                      }}\r\n                                                >\r\n                                                      <Box style={{\r\n                                                            display: \"flex\",\r\n                                                            width: \"250px\",\r\n                                                            justifyContent: \"space-between\",\r\n                                                      }}>\r\n                                                            <button className={sol._id} style={{ backgroundColor: 'white', border: 'none', color: \"blue\" }} onClick={(e) => handleReply(e)}>Reply</button>\r\n                                                            <button className={sol._id} style={{ backgroundColor: 'white', border: 'none', color: \"blue\" }} onClick={(e) => showReply(e)}>Show comments</button>\r\n                                                      </Box>\r\n\r\n                                                      <Box>\r\n                                                            <h5>Posted By</h5>\r\n                                                            <p style={{ margin: 0 }}>{sol.authorID.fullName}</p>\r\n                                                            <p>{sol.authorID.email}</p>\r\n                                                      </Box>\r\n\r\n                                                </Box>\r\n                                                <Box id={sol._id} style={{ width: '100%', display: 'none' }}>\r\n                                                      <List m={3} sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                                                            {comments.length > 0 && comments.map((c) => (\r\n                                                                  <Box style={{ marginLeft: '50px' }} key={c._id}>\r\n                                                                        <ListItem divider alignItems=\"flex-start\">\r\n                                                                              <ListItemAvatar>\r\n                                                                                    <Avatar alt=\"Remy Sharp\" >\r\n                                                                                          {c.authorID.fullName[0]}\r\n                                                                                    </Avatar>\r\n                                                                              </ListItemAvatar>\r\n                                                                              <ListItemText\r\n                                                                                    primary={<React.Fragment>\r\n                                                                                          <Typography\r\n                                                                                                sx={{ display: 'inline' }}\r\n                                                                                                component=\"span\"\r\n                                                                                                variant=\"body2\"\r\n                                                                                                color=\"text.primary\"\r\n                                                                                          >\r\n                                                                                                {c.description}\r\n                                                                                          </Typography>\r\n\r\n                                                                                    </React.Fragment>}\r\n\r\n                                                                                    secondary={\r\n                                                                                          <React.Fragment>\r\n                                                                                                <Typography\r\n                                                                                                      sx={{ display: 'inline' }}\r\n                                                                                                      component=\"span\"\r\n                                                                                                      variant=\"body3\"\r\n                                                                                                      fontWeight='bold'\r\n                                                                                                      color=\"text.primary\"\r\n                                                                                                >\r\n                                                                                                      Posted by: {c.authorID.fullName}\r\n                                                                                                </Typography>\r\n\r\n                                                                                          </React.Fragment>\r\n                                                                                    }\r\n                                                                              />\r\n                                                                        </ListItem>\r\n\r\n                                                                  </Box>\r\n                                                            ))}\r\n                                                      </List>\r\n                                                      <Box>\r\n                                                            <TextField fullWidth label=\"Add a public reply\" variant=\"standard\" value={reply} onChange={(e) => setReply(e.target.value)} />\r\n                                                            <Box style={{ margin: '10px 0', display: \"flex\", justifyContent: \"right\" }}>\r\n                                                                  <Button className=\"homeButton\" value={sol._id} onClick={(e) => hideReply(e)} style={{ color: '#484848', fontWeight: 'bold' }}>Cancel</Button>\r\n                                                                  <Button className=\"homeButton\" value={sol._id} onClick={(e) => postReply(e, sol)} style={{ backgroundColor: '#e1e1e1', color: '#484848', fontWeight: 'bold' }}>Reply</Button>\r\n\r\n                                                            </Box>\r\n                                                      </Box>\r\n                                                </Box>\r\n\r\n\r\n                                                <hr />\r\n                                          </Box>\r\n                                    ))}\r\n                              </Box>\r\n                        ) : null\r\n                        }\r\n\r\n                        {\r\n                              question === null ? null : (\r\n                                    <Box mx={10}>\r\n                                          <form onSubmit={handleSubmit}>\r\n                                                <Editor\r\n                                                      apiKey={process.env.REACT_APP_EDITOR_KEY}\r\n                                                      value={editorData}\r\n                                                      init={{\r\n                                                            content_css: [\"./style.css\"],\r\n                                                            menubar: false,\r\n                                                            plugins: [\r\n                                                                  \"advlist autolink lists link image\",\r\n                                                                  \"charmap print preview anchor help\",\r\n                                                                  \"searchreplace visualblocks code\",\r\n                                                                  \"insertdatetime media table paste wordcount\",\r\n                                                            ],\r\n                                                            toolbar:\r\n                                                                  \"undo redo | formatselect | bold italic | \\\r\n        alignleft aligncenter alignright | \\\r\n        bullist numlist outdent indent | help\",\r\n                                                      }}\r\n                                                      onEditorChange={handleChange}\r\n                                                />\r\n                                                <Button\r\n                                                      type=\"submit\"\r\n                                                      style={{\r\n                                                            background: \"#1976d2\",\r\n                                                            color: \"#fff\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            margin: \"10px\",\r\n                                                      }}\r\n                                                >\r\n                                                      Post a Solution\r\n                                                </Button>\r\n                                          </form>\r\n                                    </Box>\r\n                              )\r\n                        }\r\n                        <Box\r\n                              className=\"loadContainer\"\r\n                              style={\r\n                                    loading\r\n                                          ? {}\r\n                                          : {\r\n                                                position: \"fixed\",\r\n                                                backgroundColor: \"#00000040\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                                bottom: 0,\r\n                                                top: 0,\r\n                                                right: 0,\r\n                                                left: 0,\r\n                                                zIndex: 100,\r\n                                          }\r\n                              }\r\n                        >\r\n                              <Box\r\n                                    id=\"lottieweb\"\r\n                                    style={{ display: loading ? \"none\" : \"flex\" }}\r\n                              ></Box>\r\n                        </Box>\r\n                  </Box>\r\n\r\n            </Layout >\r\n      );\r\n}","import { TextField, Button } from '@mui/material';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport Lottie from 'lottie-web';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport axios from 'axios';\r\nimport Toast from '../../utils/swal';\r\nimport { api } from \"../../urlConfig\";\r\nimport './style.css';\r\n\r\nconst PostQuestion = () => {\r\n      const [title, setTitle] = useState(\"\");\r\n      const [category, setCategory] = useState(\"\");\r\n      const [editorData, setEditorData] = useState(\"\");\r\n      const [loading, setLoading] = useState(true);\r\n      const [loadEditor, setLoadEditor] = useState(false);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n\r\n      useEffect(() => {\r\n            setTimeout(() => {\r\n                  if (isMountedRef.current) { setLoadEditor(true) };\r\n            }, 1000)\r\n      }, []);\r\n\r\n\r\n      useEffect(() => {\r\n            Lottie.loadAnimation({\r\n                  container: document.getElementById(\"lottieweb\"),\r\n                  renderer: \"svg\",\r\n                  loop: true,\r\n                  autoplay: true,\r\n                  animationData: require(\"../../images/84860-my-first-ever-lottie.json\"),\r\n                  rendererSettings: {\r\n                        className: \"lottieRenderer\",\r\n                  },\r\n            });\r\n      }, []);\r\n\r\n      const handleChange = (content, editor) => {\r\n            setEditorData(content);\r\n      };\r\n\r\n\r\n\r\n      const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n\r\n            const question = {\r\n                  title,\r\n                  description: editorData,\r\n                  category,\r\n            };\r\n\r\n\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n            setLoading(false);\r\n            axios\r\n                  .post(`${api}/question/create`, question)\r\n                  .then((res) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        // const user = JSON.parse(window.sessionStorage.getItem(\"user\"));\r\n                        // user.questionId += 1;\r\n                        // window.sessionStorage.clear()\r\n                        // window.sessionStorage.setItem(\"user\", JSON.stringify(user));\r\n                        // dispatch({\r\n                        //       type: questionConstants.CREATE_QUESTION_SUCCESS,\r\n\r\n                        // });\r\n                        Toast.fire({\r\n                              icon: \"success\",\r\n                              title: \"Question posted...!\",\r\n                        });\r\n\r\n\r\n                  })\r\n                  .catch((error) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: \"Unable to post\",\r\n                        });\r\n                  });\r\n      };\r\n\r\n\r\n      return (\r\n            <Layout>\r\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: \"80vw\", margin: \"auto\" }}>\r\n                        <form style={{ width: '100%' }} onSubmit={handleSubmit}>\r\n                              <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Question Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"title\"\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    autoFocus\r\n                              />\r\n                              <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Category\"\r\n                                    name=\"Category\"\r\n                                    autoComplete=\"Category\"\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                    autoFocus\r\n                              />\r\n                              {loadEditor ? <Editor\r\n                                    apiKey={process.env.REACT_APP_EDITOR_KEY}\r\n                                    value={editorData}\r\n                                    init={{\r\n                                          content_css: [\"./style.css\"],\r\n                                          menubar: false,\r\n                                          plugins: [\r\n                                                \"advlist autolink lists link image\",\r\n                                                \"charmap print preview anchor help\",\r\n                                                \"searchreplace visualblocks code\",\r\n                                                \"insertdatetime media table paste wordcount\",\r\n                                          ],\r\n                                          toolbar:\r\n                                                \"undo redo | formatselect | bold italic | \\\r\n                              alignleft aligncenter alignright | \\\r\n                              bullist numlist outdent indent | help\",\r\n                                    }}\r\n                                    onEditorChange={handleChange}\r\n                              /> : null}\r\n                              <Button\r\n                                    type=\"submit\"\r\n                                    style={{\r\n                                          background: \"#1976d2\",\r\n                                          color: \"#fff\",\r\n                                          fontWeight: \"bold\",\r\n                                          margin: \"10px 0\",\r\n                                    }}\r\n                              >\r\n                                    Post a Question\r\n                              </Button>\r\n\r\n                        </form>\r\n                  </div>\r\n                  <div\r\n                        className=\"loadContainer\"\r\n                        style={\r\n                              loading\r\n                                    ? {}\r\n                                    : {\r\n                                          position: \"fixed\",\r\n                                          backgroundColor: \"#00000040\",\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                          justifyContent: \"center\",\r\n                                          bottom: 0,\r\n                                          top: 0,\r\n                                          right: 0,\r\n                                          left: 0,\r\n                                          zIndex: 100,\r\n                                    }\r\n                        }\r\n                  >\r\n                        <div\r\n                              id=\"lottieweb\"\r\n                              style={{ display: loading ? \"none\" : \"flex\" }}\r\n                        ></div>\r\n                  </div>\r\n\r\n            </Layout >\r\n      );\r\n}\r\n\r\nexport default PostQuestion;\r\n","import {\r\n      Avatar,\r\n      Card,\r\n      CardContent,\r\n      CardHeader,\r\n      Typography,\r\n} from \"@mui/material\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { api } from \"../../urlConfig\";\r\nimport getLongDate from \"../../utils/date\";\r\n\r\n\r\nconst Category = () => {\r\n      const slug = useParams().slug;\r\n      const [question, setQuestion] = useState([]);\r\n\r\n      useEffect(async () => {\r\n            await axios\r\n                  .get(`${api}/category?slug=${slug}`)\r\n                  .then((res) => {\r\n                        let q = [];\r\n                        q.push(...res.data.questions);\r\n                        setQuestion(q);\r\n\r\n                  })\r\n                  .catch((error) => {\r\n                        console.log(error);\r\n                  });\r\n      }, [slug]);\r\n\r\n      return (\r\n            <Layout>\r\n                  {question.length < 1 ? null :\r\n                        <div className=\"homeContainer\">\r\n                              {question.map((q) => (\r\n                                    <Link\r\n                                          to={`/question/${q.slug}`}\r\n                                          replace\r\n                                          key={q._id}\r\n                                          style={{ textDecoration: \"none\" }}\r\n                                          className=\"homeLink\"\r\n                                    >\r\n                                          <Card sx={{ maxWidth: 345 }}>\r\n                                                <CardHeader\r\n                                                      avatar={\r\n                                                            <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                                  {q.authorID.fullName.charAt(0)}\r\n                                                            </Avatar>\r\n                                                      }\r\n                                                      title={q.authorID.fullName}\r\n                                                      subheader={getLongDate(q.createdAt)}\r\n                                                />\r\n                                                <CardContent>\r\n                                                      <Typography\r\n                                                            className=\"description\"\r\n                                                            variant=\"body2\"\r\n                                                            color=\"text.secondary\"\r\n                                                            dangerouslySetInnerHTML={{\r\n                                                                  __html: q.description,\r\n                                                            }}\r\n                                                      />\r\n                                                      <hr />\r\n                                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                            {q.solutionId.length} solutions\r\n                                                      </Typography>\r\n                                                </CardContent>\r\n                                          </Card>\r\n                                    </Link>\r\n                              ))}\r\n                        </div>\r\n                  }\r\n            </Layout>\r\n      );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\n\r\nimport { Grid, Typography, CardContent, Card } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Profile from '../../components/Profile';\r\nimport { api } from '../../urlConfig';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css'\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport getLongDate from '../../utils/date';\r\n\r\n\r\nconst UserQuestion = () => {\r\n\r\n      const [questions, setQuestions] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/questions`).then((res) => {\r\n                  if (isMountedRef.current) setQuestions(res.data.user.questionId);\r\n            }).catch((err) => {\r\n                  console.log(err);\r\n\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {questions && questions.map((q) => (\r\n                                                            <Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a question\r\n                                                                                    <b>{` ${q.title} `}</b>\r\n                                                                                    on {`${getLongDate(q.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n                                                                                    dangerouslySetInnerHTML={{\r\n                                                                                          __html: q.description,\r\n                                                                                    }}\r\n\r\n                                                                              />\r\n\r\n                                                                              <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {q.solutionId.length} solutions\r\n                                                                              </Typography>\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n                              </Grid>\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n}\r\n\r\nexport default UserQuestion;\r\n","import { CardContent, Grid, Typography, Card } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../../components/Layout';\r\nimport Profile from '../../components/Profile';\r\nimport { api } from '../../urlConfig';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport getLongDate from '../../utils/date';\r\n\r\nconst UserSolution = () => {\r\n\r\n      const [solutions, setSolutions] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/solutions`).then((res) => {\r\n                  // setQuestions(res.data.user.questionId);\r\n                  if (isMountedRef.current) setSolutions(res.data.user.solutionId);\r\n                  console.log(res.data.user.solutionId);\r\n                  // setSolutions\r\n            }).catch((err) => {\r\n                  console.log(err);\r\n\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {solutions && solutions.map((s) => (\r\n                                                            <Link to={`/question/${s.questionId.slug}`} replace key={s._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a solution to\r\n                                                                                    <b>{` ${s.questionId.title} `}</b>\r\n                                                                                    on {`${getLongDate(s.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n                                                                                    dangerouslySetInnerHTML={{\r\n                                                                                          __html: s.description,\r\n                                                                                    }}\r\n\r\n                                                                              />\r\n\r\n                                                                              <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {s.commentsId.length} comments\r\n                                                                              </Typography>\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n\r\n                              </Grid>\r\n\r\n\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n}\r\n\r\nexport default UserSolution;\r\n","import { Grid } from \"@mui/material\";\r\nimport { CardContent, Typography, Card } from '@mui/material';\r\nimport { Box } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Profile from \"../../components/Profile\";\r\nimport { api } from \"../../urlConfig\";\r\nimport { Link } from 'react-router-dom';\r\nimport useIsMountedRef from \"../../utils/asyncSubscriptionCancel\";\r\nimport getLongDate from \"../../utils/date\";\r\n\r\n\r\nconst returnShortString = (s) => {\r\n      const arr = s.split(\" \");\r\n      let ans = \"\";\r\n      for (let i = 0; i < arr.length && i < 4; i++) {\r\n            ans += arr[i] + \" \"\r\n      }\r\n      return ans + \"...\";\r\n}\r\nconst UserComment = () => {\r\n      const [comments, setComments] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/comments`).then((res) => {\r\n                  // setQuestions(res.data.user.questionId);\r\n                  // setSolutions(res.data.user.solutionId);\r\n                  console.log(res.data.user.commentId);\r\n                  if (isMountedRef.current) setComments(res.data.user.commentId);\r\n                  // setSolutions\r\n            }).catch((err) => {\r\n                  console.log(err);\r\n\r\n            })\r\n      }, [])\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {comments && comments.map((c) => (\r\n                                                            <Link to={`/question/${c.solutionId.questionId.slug}`} replace key={c._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a comment to\r\n                                                                                    <b>{` ${returnShortString(c.solutionId.description)} `}</b>\r\n                                                                                    on {`${getLongDate(c.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n\r\n                                                                              >{c.description}</Typography>\r\n\r\n                                                                              {/* <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {s.commentsId.length} comments\r\n                                                                              </Typography> */}\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n\r\n                              </Grid>\r\n\r\n\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n};\r\n\r\nexport default UserComment;\r\n","import \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/HOC/privateRoute\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { categoryConstants } from \"./constants\";\r\nimport { isUserLoggedIn } from \"./utils/user.action\";\r\nimport Question from \"./pages/Question\";\r\nimport PostQuestion from \"./pages/PostQuestion\";\r\nimport { api } from \"./urlConfig\";\r\nimport Category from \"./pages/Category\";\r\nimport UserQuestion from \"./pages/UserQuestion\";\r\nimport UserSolution from \"./pages/UserSolution\";\r\nimport UserComment from \"./pages/UserComment\";\r\n\r\nfunction App() {\r\n\tconst auth = useSelector((state) => {\r\n\t\treturn state.auth;\r\n\t});\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!auth.authenticate) {\r\n\t\t\tdispatch(isUserLoggedIn());\r\n\t\t}\r\n\r\n\t\taxios\r\n\t\t\t.get(`${api}/category/getCategory`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { categories } = res.data;\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmessage: categories,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\terror: error.response,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<PrivateRoute path=\"/\" exact component={Home} />\r\n\t\t\t\t<PrivateRoute path=\"/postQuestion\" exact component={PostQuestion} />\r\n\t\t\t\t<Route path=\"/signin\" exact component={Signin} />\r\n\t\t\t\t<Route path=\"/signup\" exact component={Signup} />\r\n\t\t\t\t<Route path=\"/question/:slug\" exact component={Question} />\r\n\t\t\t\t<Route path=\"/category/:slug\" exact component={Category} />\r\n\t\t\t\t<PrivateRoute path=\"/user/questions\" exact component={UserQuestion} />\r\n\t\t\t\t<PrivateRoute path=\"/user/solutions\" exact component={UserSolution} />\r\n\t\t\t\t<PrivateRoute path=\"/user/comments\" exact component={UserComment} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { userConstants } from \"../constants\";\r\n\r\nconst initState = {\r\n\tauthenticate: false,\r\n\tauthenticating: false,\r\n\tmessage: \"\",\r\n\terror: null,\r\n\tuser: {}\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase userConstants.SIGNIN_REQUEST:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthenticating: true,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNIN_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload.user,\r\n\t\t\t\tauthenticate: true,\r\n\t\t\t\tauthenticating: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNIN_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t\terror: action.payload.error,\r\n\t\t\t\tauthenticating: false,\r\n\t\t\t};\r\n\t\tcase userConstants.SIGNOUT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t};\r\n\t\tcase userConstants.SIGNOUT_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\tcase userConstants.USER_UPDATE:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload.user\r\n\t\t\t}\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default authReducer;\r\n","import { categoryConstants } from \"../constants\";\r\n\r\nconst initState = {\r\n\tcategories: [],\r\n\tloading: false,\r\n\terror: null,\r\n};\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_REQUEST:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: action.payload.message.categories,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t\terror: action.payload.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default categoryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth.reducer\";\r\nimport categoryReducer from \"./category.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth: authReducer,\r\n\tcategory: categoryReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}