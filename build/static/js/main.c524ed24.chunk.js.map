{"version":3,"sources":["components/HOC/privateRoute.js","urlConfig.js","components/Search/useQuestionSearch.js","components/Search/index.js","constants.js","utils/swal.js","components/Header/index.js","components/Layout/index.js","utils/asyncSubscriptionCancel.js","components/Profile/index.js","utils/date.js","pages/Home/index.js","pages/Home/useQuestion.js","pages/Signin/index.js","pages/Signup/index.js","utils/user.action.js","pages/Question/index.js","pages/PostQuestion/index.js","pages/Category/index.js","pages/UserQuestion/index.js","pages/UserSolution/index.js","pages/UserComment/index.js","App.js","reportWebVitals.js","reducers/auth.reducer.js","reducers/category.reducer.js","reducers/index.js","store/index.js","index.js"],"names":["PrivateRoute","Component","component","rest","props","JSON","parse","window","localStorage","getItem","to","api","UseQuestionSearch","query","pageNumber","useState","loading","setLoading","error","setError","questions","setQuestions","hasMore","setHasMore","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","res","prevQ","Set","data","results","map","ques","length","catch","e","isCancel","Search","setQuery","setPageNumber","observer","useRef","lastQuestionRef","useCallback","node","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPageNumber","observe","style","position","placeholder","value","onChange","target","fontSize","width","borderRadius","padding","outline","border","borderBottomLeftRadius","borderBottomRightRadius","className","idx","type","slug","replace","ref","title","name","dangerouslySetInnerHTML","__html","description","_id","categoryConstants","userConstants","Toast","Swal","mixin","toast","showConfirmButton","timer","timerProgressBar","didOpen","addEventListener","stopTimer","resumeTimer","Header","auth","useSelector","state","dispatch","useDispatch","location","useLocation","pathname","handleSignout","post","clear","fire","icon","message","response","Box","sx","flexGrow","AppBar","marginBottom","Toolbar","IconButton","size","edge","mr","Typography","variant","textDecoration","color","authenticate","display","xs","md","Button","fontWeight","margin","backgroundColor","onClick","Layout","children","useIsMountedRef","isMountedRef","React","Profile","user","setUser","setItem","stringify","commentId","solutionId","questionId","payload","console","log","top","flexDirection","alignItems","Avatar","height","fullName","charAt","mt","mb","borderTop","m","bgcolor","purple","faQuestion","faLightbulb","faComments","getLongDate","d","arr","Date","toString","split","Home","setValue","filter","setFilter","question","prevq","q","useQuestion","addFilter","filterName","getAttribute","Grid","container","item","borderLeft","justifyContent","ButtonGroup","index","Card","maxWidth","CardHeader","avatar","red","authorID","subheader","createdAt","CardContent","theme","createTheme","SignIn","email","setEmail","password","setPassword","ThemeProvider","Container","CssBaseline","marginTop","onSubmit","event","preventDefault","noValidate","TextField","required","fullWidth","id","label","autoComplete","autoFocus","cursor","PASSWORD_VALIDATION_REGEXP","RegExp","MenuProps","PaperProps","maxHeight","ITEM_HEIGHT","Signup","setFullname","isPasswordValidated","setIsPasswordValidated","categories","setCategories","category","history","useHistory","handleSubmit","a","categoryId","forEach","el","push","minHeight","spacing","test","helperText","FormControl","InputLabel","Select","labelId","multiple","findIndex","cat","input","OutlinedInput","renderValue","selected","selectedOptions","MenuItem","Checkbox","checked","ListItemText","primary","FormHelperText","Question","useParams","setQuestion","editorData","setEditorData","comments","setComments","reply","setReply","Lottie","loadAnimation","document","getElementById","renderer","loop","autoplay","animationData","require","rendererSettings","postReply","sol","getElementsByTagName","overflow","solId","comment","removeAttribute","showReply","s","tid","solution","commentsId","mx","gutterBottom","scrollTo","body","scrollHeight","background","Chip","textspacing","handleReply","textAlign","List","marginLeft","ListItem","divider","ListItemAvatar","alt","Fragment","secondary","hideReply","reload","apiKey","process","init","content_css","menubar","plugins","toolbar","onEditorChange","content","editor","bottom","right","left","zIndex","PostQuestion","setTitle","setCategory","loadEditor","setLoadEditor","setTimeout","_question","Category","UserQuestion","UserSolution","solutions","setSolutions","returnShortString","ans","i","UserComment","App","parseUser","path","exact","Signin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initState","authenticating","authReducer","action","categoryReducer","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c524ed24.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nexport default function PrivateRoute({ component: Component, ...rest }) {\r\n\treturn (\r\n\t\t<Route\r\n\t\t\t{...rest}\r\n\t\t\tcomponent={(props) => {\r\n\t\t\t\tconst tokenObj = JSON.parse(\r\n\t\t\t\t\twindow.localStorage.getItem(\"user\")\r\n\t\t\t\t);\r\n\t\t\t\tif (tokenObj) {\r\n\t\t\t\t\treturn <Component {...props} />;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn <Redirect to={`/signin`} />;\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t/>\r\n\t);\r\n}\r\n","// export const api = \"https://peaceful-fortress-48629.herokuapp.com/api\";\r\nexport const api = \"/api\";\r\n","import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\nconst UseQuestionSearch = (query, pageNumber) => {\r\n\r\n      const [loading, setLoading] = useState(true);\r\n      const [error, setError] = useState(false);\r\n      const [questions, setQuestions] = useState([])\r\n      const [hasMore, setHasMore] = useState(false);\r\n\r\n\r\n      useEffect(() => {\r\n            setQuestions([])\r\n      }, [query])\r\n\r\n      useEffect(() => {\r\n            setLoading(true);\r\n            setError(false);\r\n            let cancel;\r\n            axios\r\n                  .get(\r\n                        `${api}/search?search=${query}&page=${pageNumber}`,\r\n                        {\r\n\r\n                              cancelToken: new axios.CancelToken(c => cancel = c),\r\n\r\n                        },\r\n                  )\r\n                  .then((res) => {\r\n                        setQuestions(prevQ => {\r\n                              return [...new Set([...prevQ, ...res.data.results.map(ques => ques)])];\r\n                        })\r\n                        setHasMore(res.data.results.length > 0)\r\n                        setLoading(false);\r\n                  })\r\n                  .catch((e) => {\r\n                        if (axios.isCancel(e)) return;\r\n                        setError(true);\r\n                  });\r\n\r\n            return () => cancel();\r\n      }, [query, pageNumber]);\r\n\r\n      return { loading, error, hasMore, questions };\r\n};\r\n\r\nexport default UseQuestionSearch;\r\n","import React, { useState, useRef, useCallback } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport UseQuestionSearch from './useQuestionSearch';\r\n\r\nconst Search = () => {\r\n      const [query, setQuery] = useState(\"\");\r\n      const [pageNumber, setPageNumber] = useState(1);\r\n\r\n      const { loading, error, hasMore, questions } = UseQuestionSearch(query, pageNumber);\r\n\r\n      const observer = useRef()\r\n      const lastQuestionRef = useCallback((node) => {\r\n            if (observer.current) observer.current.disconnect();\r\n            observer.current = new IntersectionObserver((entries) => {\r\n                  if (entries[0].isIntersecting && hasMore) {\r\n                        setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n                  }\r\n            });\r\n            if (node) observer.current.observe(node);\r\n      },\r\n            [loading, hasMore]\r\n      )\r\n\r\n      function handleSearch(e) {\r\n            setQuery(e.target.value);\r\n            setPageNumber(1);\r\n      }\r\n\r\n      return (\r\n            <div>\r\n                  <div style={{\r\n                        position: 'relative',\r\n                        // top: 0\r\n                  }}>\r\n                        <input placeholder=\"Search\" value={query} onChange={handleSearch} style={{ fontSize: '16px', width: '500px', borderRadius: '8px', padding: '0.4rem 1rem', outline: 'none', border: '1px solid #e1e1e1', borderBottomLeftRadius: query === '' || questions.length < 1 ? 8 : 0, borderBottomRightRadius: query === '' || questions.length < 1 ? 8 : 0 }} />\r\n                  </div>\r\n                  {query === '' || questions.length < 1 ? null : <div className=\"searchScroll\">\r\n                        {questions.map((ques, idx) => {\r\n                              if (idx + 1 === questions.length) {\r\n                                    return <Link to={`/${ques.type}/${ques.slug}`} replace ref={lastQuestionRef} key={ques._id} >\r\n                                          <div className=\"box\">\r\n                                                <h6>{ques.type === 'question' ? ques.title : ques.name}</h6>\r\n                                                {ques.type === 'question' ? <p dangerouslySetInnerHTML={{\r\n                                                      __html: ques.description,\r\n                                                }} /> : null}\r\n                                          </div>\r\n\r\n\r\n                                    </Link>\r\n                              } else {\r\n                                    return <Link to={`/${ques.type}/${ques.slug}`} key={ques._id} replace>\r\n                                          <div className=\"box\">\r\n                                                <h6>{ques.type === 'question' ? ques.title : ques.name}</h6>\r\n                                                {ques.type === 'question' ? <p dangerouslySetInnerHTML={{\r\n                                                      __html: ques.description,\r\n                                                }} /> : null}\r\n                                          </div>\r\n\r\n\r\n                                    </Link>\r\n                              }\r\n                        })}\r\n                  </div>}\r\n\r\n\r\n\r\n            </div >\r\n\r\n\r\n      );\r\n}\r\n\r\nexport default Search;\r\n","export const categoryConstants = {\r\n\tGET_ALL_CATEGORIES_REQUEST: \"GET_ALL_CATEGORIES_REQUEST\",\r\n\tGET_ALL_CATEGORIES_SUCCESS: \"GET_ALL_CATEGORIES_SUCCESS\",\r\n\tGET_ALL_CATEGORIES_FAILURE: \"GET_ALL_CATEGORIES_FAILURE\",\r\n\tCREATE_CATEGORY_REQUEST: \"CREATE_CATEGORY_REQUEST\",\r\n\tCREATE_CATEGORY_SUCCESS: \"CREATE_CATEGORY_SUCCESS\",\r\n\tCREATE_CATEGORY_FAILURE: \"CREATE_CATEGORY_FAILURE\",\r\n};\r\n\r\nexport const userConstants = {\r\n\tSIGNUP_REQUEST: \"SIGNUP_REQUEST\",\r\n\tSIGNUP_SUCCESS: \"SIGNUP_SUCCESS\",\r\n\tSIGNUP_FAILURE: \"SIGNUP_FAILURE\",\r\n\tSIGNIN_REQUEST: \"SIGNIN_REQUEST\",\r\n\tSIGNIN_SUCCESS: \"SIGNIN_SUCCESS\",\r\n\tSIGNIN_FAILURE: \"SIGNIN_FAILURE\",\r\n\tSIGNOUT_SUCCESS: \"SIGNOUT_SUCCESS\",\r\n\tSIGNOUT_FAILURE: \"SIGNOUT_FAILURE\",\r\n\tUSER_UPDATE: \"USER_UPDATE\"\r\n\r\n};\r\n\r\n\r\n","import Swal from \"sweetalert2\";\r\n\r\nconst Toast = Swal.mixin({\r\n\ttoast: true,\r\n\tposition: \"top-end\",\r\n\tshowConfirmButton: false,\r\n\ttimer: 5000,\r\n\ttimerProgressBar: true,\r\n\tdidOpen: (toast) => {\r\n\t\ttoast.addEventListener(\"mouseenter\", Swal.stopTimer);\r\n\t\ttoast.addEventListener(\"mouseleave\", Swal.resumeTimer);\r\n\t},\r\n});\r\n\r\nexport default Toast;\r\n","import React from \"react\";\r\nimport AppBar from \"@mui/material/AppBar\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport { Link } from \"react-router-dom\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport { useLocation } from \"react-router\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"@mui/material\";\r\nimport Search from '../Search';\r\nimport axios from 'axios';\r\nimport { api } from '../../urlConfig';\r\nimport { userConstants } from \"../../constants\";\r\nimport Swal from \"sweetalert2\";\r\nimport Toast from \"../../utils/swal\";\r\n\r\nexport default function Header() {\r\n\tconst auth = useSelector((state) => state.auth);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst location = useLocation().pathname === \"/signin\" ? `signin` : `signup`;\r\n\r\n\r\n\tconst handleSignout = () => {\r\n\t\taxios.post(`${api}/signout`).then((res) => {\r\n\t\t\twindow.localStorage.clear();\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNOUT_SUCCESS,\r\n\r\n\t\t\t});\r\n\r\n\t\t\tToast.fire({\r\n\t\t\t\ticon: \"success\",\r\n\t\t\t\ttitle: res.data.message,\r\n\t\t\t});\r\n\r\n\t\t}).catch((error) => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNOUT_FAILURE,\r\n\r\n\t\t\t});\r\n\t\t\tToast.fire({\r\n\t\t\t\ticon: \"error\",\r\n\t\t\t\ttitle: error.response.data.message,\r\n\t\t\t});\r\n\t\t})\r\n\t}\r\n\r\n\tconst renderLoggedInLinks = () => {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto='/signin'\r\n\t\t\t\tvariant=\"body2\"\r\n\t\t\t\tstyle={{ textDecoration: \"none\", fontWeight: \"bold\", color: 'white' }}\r\n\t\t\t\tonClick={handleSignout}\r\n\t\t\t>\r\n\t\t\t\tSIGNOUT\r\n\t\t\t</Link>\r\n\t\t);\r\n\t};\r\n\r\n\tconst renderNonLoggedInLinks = () => {\r\n\t\treturn (\r\n\t\t\t<Link\r\n\t\t\t\tto={location === \"signin\" ? `/signup` : `/signin`}\r\n\t\t\t\tvariant=\"body2\"\r\n\t\t\t\tstyle={{ textDecoration: \"none\", fontWeight: \"bold\", color: 'white' }}\r\n\t\t\t>\r\n\t\t\t\t{location === \"signin\" ? \"SIGNUP\" : \"SIGNIN\"}\r\n\t\t\t</Link>\r\n\t\t);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<Box sx={{ flexGrow: 1 }} >\r\n\t\t\t<AppBar\r\n\t\t\t\tposition=\"static\"\r\n\t\t\t\tstyle={{ marginBottom: '10px', padding: '0 100px' }}\r\n\r\n\t\t\t>\r\n\t\t\t\t<Toolbar>\r\n\t\t\t\t\t<IconButton\r\n\t\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\t\tedge=\"start\"\r\n\t\t\t\t\t\taria-label=\"menu\"\r\n\r\n\t\t\t\t\t\tsx={{ mr: 2 }}\r\n\t\t\t\t\t></IconButton>\r\n\r\n\t\t\t\t\t<Typography\r\n\t\t\t\t\t\tvariant=\"h6\"\r\n\t\t\t\t\t\tcomponent=\"div\"\r\n\t\t\t\t\t\tsx={{ flexGrow: 1 }}\r\n\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Link to=\"/\" style={{ textDecoration: 'none', color: 'white' }}>Memory Limit Exceeded</Link>\r\n\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t{auth.authenticate ? <Search /> : null}\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tdisplay: { xs: \"none\", md: \"flex\" },\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{auth.authenticate ? (\r\n\t\t\t\t\t\t\t<Link to='/postquestion' style={{ textDecoration: 'none' }}><Button\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\r\n\t\t\t\t\t\t\t\t\tfontWeight: \"bold\",\r\n\t\t\t\t\t\t\t\t\tmargin: \"20px\",\r\n\r\n\t\t\t\t\t\t\t\t\tbackgroundColor: 'white'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAsk a Question\r\n\t\t\t\t\t\t\t</Button></Link>\r\n\r\n\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t{auth.authenticate\r\n\t\t\t\t\t\t? renderLoggedInLinks()\r\n\t\t\t\t\t\t: renderNonLoggedInLinks()}\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\r\n\t\t</Box >\r\n\t);\r\n}\r\n","import React from \"react\";\r\nimport Header from \"../Header\";\r\nimport Box from '@mui/material/Box';\r\nimport './style.css'\r\n\r\nexport default function Layout(props) {\r\n\treturn (\r\n\t\t<Box>\r\n\t\t\t<Header></Header>\r\n\t\t\t<Box>\r\n\t\t\t\t{props.children}\r\n\t\t\t</Box>\r\n\t\t</Box >\r\n\t);\r\n}","import React from 'react'\r\n\r\nfunction useIsMountedRef() {\r\n      const isMountedRef = React.useRef(null);\r\n      React.useEffect(() => {\r\n            isMountedRef.current = true;\r\n            return () => isMountedRef.current = false;\r\n      });\r\n      return isMountedRef;\r\n}\r\n\r\nexport default useIsMountedRef;","import React, { useEffect, useState } from 'react';\r\nimport { Avatar, Typography, Box } from \"@mui/material\";\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faQuestion, faComments, faLightbulb } from '@fortawesome/free-solid-svg-icons'\r\nimport { purple } from '@mui/material/colors';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport { api } from '../../urlConfig';\r\nimport axios from 'axios';\r\nimport { userConstants } from '../../constants';\r\n\r\nconst Profile = () => {\r\n\r\n      const [user, setUser] = useState(JSON.parse(window.localStorage.getItem(\"user\")));\r\n\r\n      const isMountedRef = useIsMountedRef();\r\n      const dispatch = useDispatch();\r\n      const auth = useSelector(state => state.auth);\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/getUserInfo`).then((res) => {\r\n                  if (isMountedRef.current) {\r\n                        setUser(res.data.user);\r\n                        window.localStorage.setItem(\"user\", JSON.stringify(res.data.user));\r\n\r\n                  }\r\n                  if (auth.user.commentId.length !== res.data.user.commentId.length ||\r\n                        auth.user.solutionId.length !== res.data.user.solutionId.length ||\r\n                        auth.user.questionId.length !== res.data.user.questionId.length) {\r\n                        dispatch({\r\n                              type: userConstants.USER_UPDATE,\r\n                              payload: {\r\n                                    user: user,\r\n                              },\r\n                        });\r\n\r\n\r\n                  }\r\n\r\n            }).catch((error) => {\r\n                  console.log(error);\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Box position=\"fixed\" top=\"25%\" display=\"flex\" flexDirection=\"column\" alignItems=\"center\" border='1px solid #e1e1e1' padding='10px' borderRadius=\"10px\">\r\n                  <Avatar sx={{ width: 100, height: 100 }}> {user && user.fullName.charAt(0)}</Avatar>\r\n                  <Typography mt={2} mb={2} variant=\"h5\">\r\n                        {user && `${user.fullName}`}\r\n                  </Typography>\r\n                  <Box borderTop=\"1px solid #e1e1e1\" display=\"flex\" >\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faQuestion} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.questionId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    {user && `${user.questionId.length > 1 ? \"Questions\" : \"Question\"}`}\r\n                              </Typography>\r\n\r\n                        </Box >\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faLightbulb} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.solutionId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    {user && `${user.solutionId.length > 1 ? \"Solutions\" : \"Solution\"}`}\r\n                              </Typography>\r\n                        </Box>\r\n                        <Box m={2} display=\"flex\" flexDirection=\"column\" alignItems=\"center\">\r\n                              <Avatar sx={{ width: 40, height: 40, bgcolor: purple[500] }}> <FontAwesomeIcon icon={faComments} /></Avatar>\r\n                              <Typography mt={1} variant=\"h5\">\r\n                                    {user ? `${user.commentId.length}` : '0'}\r\n                              </Typography>\r\n                              <Typography variant=\"subtitle\">\r\n                                    {user && `${user.commentId.length > 1 ? \"Comments\" : \"Comment\"}`}\r\n                              </Typography>\r\n                        </Box>\r\n                  </Box>\r\n                  <Box width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/questions'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Questions\r\n                                    </Typography></Link>\r\n\r\n                        </Box>\r\n\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/solutions'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Solutions\r\n                                    </Typography></Link>\r\n                        </Box>\r\n\r\n                        <Box borderTop=\"1px solid #e1e1e1\" padding=\"10px\" width='100%' display='flex' alignItems=\"center\" flexDirection='column'>\r\n                              <Link to='/user/comments'>\r\n                                    <Typography variant=\"subtitle\">\r\n                                          Your Comments\r\n                                    </Typography></Link>\r\n                        </Box>\r\n\r\n                  </Box>\r\n\r\n\r\n\r\n            </Box>\r\n      );\r\n}\r\n\r\nexport default Profile;\r\n","const getLongDate = (d) => {\r\n      const date = new Date(d)\r\n      const arr = date.toString().split(\" \");\r\n      return `${arr[1]} ${arr[2]}, ${arr[3]}`\r\n}\r\n\r\nexport default getLongDate;","import React, { useCallback, useEffect, useRef, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport ButtonGroup from '@mui/material/ButtonGroup';\r\nimport Layout from \"../../components/Layout\";\r\nimport useQuestion from \"./useQuestion\";\r\nimport './style.css';\r\nimport { Avatar, Card, CardContent, CardHeader, Typography } from \"@mui/material\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport Profile from \"../../components/Profile\";\r\nimport getLongDate from \"../../utils/date\";\r\n\r\n\r\nexport default function Home() {\r\n\tconst [pageNumber, setPageNumber] = useState(1);\r\n\tconst [value, setValue] = useState(0);\r\n\tconst [filter, setFilter] = useState(false);\r\n\tconst [query, setQuery] = useState(\"none\");\r\n\tconst { question, hasMore, loading, error } = useQuestion(pageNumber, query, value);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tsetPageNumber(1);\r\n\t}, []);\r\n\r\n\tconst observer = useRef();\r\n\tconst lastQuestionRef = useCallback(\r\n\t\t(node) => {\r\n\t\t\tif (observer.current) observer.current.disconnect();\r\n\t\t\tobserver.current = new IntersectionObserver((entries) => {\r\n\t\t\t\tif (entries[0].isIntersecting && hasMore) {\r\n\t\t\t\t\tsetPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tif (node) observer.current.observe(node);\r\n\t\t},\r\n\t\t[loading, hasMore]\r\n\t);\r\n\r\n\tconst addFilter = (e, filterName) => {\r\n\r\n\t\tsetFilter(filterName)\r\n\t\tsetValue(e.target.getAttribute('value'));\r\n\t\tsetQuery(e.target.getAttribute('query'));\r\n\t\tsetPageNumber(1);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<div>\r\n\t\t\t\t<Box sx={{ flexGrow: 1 }}>\r\n\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t<Grid display=\"flex\" flexDirection=\"column\" alignItems=\"center\" item xs={12} md={3}>\r\n\t\t\t\t\t\t\t<Profile />\r\n\r\n\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t<Grid item xs={12} md={9}>\r\n\t\t\t\t\t\t\t<Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\" }}>\r\n\r\n\t\t\t\t\t\t\t\t<Box display=\"flex\" justifyContent=\"center\">\r\n\t\t\t\t\t\t\t\t\t<ButtonGroup variant=\"outlined\" aria-label=\"outlined primary button group\">\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'most-answered')} variant={filter === 'most-answered' ? 'contained' : ''} value={-1} query=\"solution\">Mostly Answered</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'least-answered')} variant={filter === 'least-answered' ? 'contained' : ''} value={1} query=\"solution\">Least Answered</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'most-recent')} variant={filter === 'most-recent' ? 'contained' : ''} value={-1} query=\"createdAt\">Most Recent</Button>\r\n\t\t\t\t\t\t\t\t\t\t<Button className=\"filter\" onClick={(e) => addFilter(e, 'least-recent')} variant={filter === 'least-recent' ? 'contained' : ''} value={1} query=\"createdAt\">Least Recent</Button>\r\n\t\t\t\t\t\t\t\t\t</ButtonGroup>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\r\n\t\t\t\t\t\t\t\t<hr />\r\n\r\n\t\t\t\t\t\t\t\t<div className=\"homeContainer\">\r\n\t\t\t\t\t\t\t\t\t{question.map((q, index) => {\r\n\r\n\t\t\t\t\t\t\t\t\t\tif (question.length === index + 1) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none' }} className=\"homeLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card sx={{ maxWidth: 345 }} ref={lastQuestionRef}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.authorID.fullName.charAt(0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={q.authorID.fullName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubheader={getLongDate(q.createdAt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography className=\"cardDescription\" variant=\"body2\" color=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__html: q.description,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.solutionId.length} {q.solutionId.length > 1 ? \"Solutions\" : \"Solution\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none' }} className=\"homeLink\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Card sx={{ maxWidth: 345 }} className=\"homeCard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardHeader\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tavatar={\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.authorID.fullName.charAt(0)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Avatar>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttitle={q.authorID.fullName}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsubheader={getLongDate(q.createdAt)}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t__html: q.description,\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"description\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<hr />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"body2\" color=\"text.secondary\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t{q.solutionId.length} {q.solutionId.length > 1 ? \"Solutions\" : \"Solution\"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</Link>\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})}\r\n\r\n\r\n\r\n\t\t\t\t\t\t\t\t\t{/* <div>{loading && \"Loading...\"}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div>{error && \"Error\"}</div> */}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Box>\r\n\r\n\r\n\t\t\t</div>\r\n\r\n\r\n\t\t</Layout >\r\n\t);\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\nexport default function useQuestion(pageNumber, query, value) {\r\n\tconst [loading, setLoading] = useState(true);\r\n\tconst [error, setError] = useState(false);\r\n\tconst [question, setQuestions] = useState([]);\r\n\tconst [hasMore, setHasMore] = useState(false);\r\n\r\n\tconst auth = useSelector((state) => {\r\n\t\treturn state.auth;\r\n\t});\r\n\r\n\tuseEffect(() => {\r\n\t\tsetQuestions([]);\r\n\t}, [query, value]);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (auth.user._id) {\r\n\t\t\tsetLoading(true);\r\n\t\t\tsetError(false);\r\n\t\t\tlet cancel;\r\n\t\t\taxios\r\n\t\t\t\t.get(\r\n\t\t\t\t\t`${api}/getquestions?id=${auth.user._id}&page=${pageNumber}&query=${query}&value=${value}`,\r\n\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tcancelToken: new axios.CancelToken((c) => (cancel = c)),\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t)\r\n\t\t\t\t.then((res) => {\r\n\t\t\t\t\tsetQuestions((prevq) => {\r\n\t\t\t\t\t\treturn [\r\n\t\t\t\t\t\t\t...new Set([\r\n\t\t\t\t\t\t\t\t...prevq,\r\n\t\t\t\t\t\t\t\t...res.data.questions.map((q) => q),\r\n\t\t\t\t\t\t\t]),\r\n\t\t\t\t\t\t];\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\tsetHasMore(res.data.questions.length > 0);\r\n\t\t\t\t\tsetLoading(false);\r\n\t\t\t\t})\r\n\t\t\t\t.catch((e) => {\r\n\t\t\t\t\tif (axios.isCancel(e)) return;\r\n\t\t\t\t\tsetError(true);\r\n\t\t\t\t});\r\n\t\t\treturn () => cancel();\r\n\t\t} else {\r\n\t\t\treturn;\r\n\t\t}\r\n\t}, [pageNumber, query, value]);\r\n\r\n\treturn { loading, error, question, hasMore };\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { userConstants } from \"../../constants\";\r\nimport { Redirect } from \"react-router\";\r\nimport { api } from \"../../urlConfig\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Toast from \"../../utils/swal\";\r\n\r\nconst theme = createTheme();\r\n\r\nexport default function SignIn() {\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst auth = useSelector((state) => state.auth);\r\n\r\n\tconst dispatch = useDispatch();\r\n\r\n\tif (auth.authenticate) {\r\n\t\treturn <Redirect to={`/`} />;\r\n\t}\r\n\r\n\r\n\r\n\tconst handleSubmit = (event) => {\r\n\t\tevent.preventDefault();\r\n\t\tconst user = {\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t};\r\n\r\n\t\taxios\r\n\t\t\t.post(`${api}/signin`, user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { user } = res.data;\r\n\t\t\t\twindow.localStorage.setItem(\"user\", JSON.stringify(user));\r\n\t\t\t\tconsole.log(\"Hi\");\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNIN_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tuser: user,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\ttitle: res.data.message,\r\n\t\t\t\t});\r\n\t\t\t\tconsole.log(\"Hi\");\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\t// dispatch({\r\n\t\t\t\t// \ttype: userConstants.SIGNIN_FAILURE,\r\n\t\t\t\t// \tpayload: {\r\n\t\t\t\t// \t\terror: error.response.data,\r\n\t\t\t\t// \t},\r\n\t\t\t\t// });\r\n\r\n\t\t\t\t// Toast.fire({\r\n\t\t\t\t// \ticon: \"error\",\r\n\t\t\t\t// \ttitle: error.response.data.message,\r\n\t\t\t\t// });\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t<Box\r\n\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\tmarginTop: 8,\r\n\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\tSign in\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tcomponent=\"form\"\r\n\t\t\t\t\t\t\tonSubmit={handleSubmit}\r\n\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\tsx={{ mt: 1 }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\r\n\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tmargin=\"normal\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tSign In\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<Grid container>\r\n\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t<Link to=\"/signup\" variant=\"body2\" style={{ cursor: \"pointer\", textDecoration: \"underline\" }}>\r\n\t\t\t\t\t\t\t\t\t\tDon't have an account? Sign Up\r\n\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Box>\r\n\t\t\t\t</Container>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Layout>\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\r\nimport Button from \"@mui/material/Button\";\r\nimport CssBaseline from \"@mui/material/CssBaseline\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Container from \"@mui/material/Container\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Checkbox, InputLabel, ListItemText, MenuItem, FormControl, Select, OutlinedInput, FormHelperText } from \"@mui/material\";\r\nimport { Redirect, useHistory } from \"react-router\";\r\nimport axios from 'axios';\r\nimport { userConstants } from \"../../constants\";\r\nimport { api } from \"../../urlConfig\";\r\nimport Toast from \"../../utils/swal\";\r\n\r\nconst theme = createTheme();\r\nconst ITEM_HEIGHT = 48;\r\nconst ITEM_PADDING_TOP = 8;\r\nconst PASSWORD_VALIDATION_REGEXP = new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\\$%\\^&\\*])(?=.{8,})\");\r\nconst MenuProps = {\r\n\tPaperProps: {\r\n\t\tstyle: {\r\n\t\t\tmaxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\r\n\t\t\twidth: 250,\r\n\t\t},\r\n\t},\r\n};\r\n\r\n\r\n\r\nexport default function Signup() {\r\n\tconst [fullName, setFullname] = useState(\"\");\r\n\tconst [email, setEmail] = useState(\"\");\r\n\tconst [password, setPassword] = useState(\"\");\r\n\tconst [isPasswordValidated, setIsPasswordValidated] = useState(true);\r\n\tconst auth = useSelector((state) => state.auth);\r\n\tconst [categories, setCategories] = useState([]);\r\n\tconst category = useSelector((state) => {\r\n\t\treturn state.category;\r\n\t});\r\n\r\n\tconst handleChange = (event) => {\r\n\r\n\t\tconst {\r\n\t\t\ttarget: { value },\r\n\t\t} = event;\r\n\t\tif (categories.findIndex((el) => el.id === event.target.value[event.target.value.length - 1].id) > -1) {\r\n\t\t\tconst index = categories.findIndex((el) => el.id === event.target.value[event.target.value.length - 1].id);\r\n\t\t\tsetCategories(categories.filter((cat, idx) => idx !== index));\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCategories(\r\n\t\t\tvalue\r\n\t\t);\r\n\r\n\t};\r\n\tconst dispatch = useDispatch();\r\n\tconst history = useHistory();\r\n\r\n\r\n\tif (auth.authenticate) {\r\n\t\treturn <Redirect to={`/`} />;\r\n\t}\r\n\r\n\r\n\tconst handleSubmit = async (event) => {\r\n\t\tevent.preventDefault();\r\n\r\n\t\tlet categoryId = [];\r\n\t\tcategories.forEach((el) => categoryId.push(el.id));\r\n\r\n\t\tconst user = {\r\n\t\t\tfullName,\r\n\t\t\temail,\r\n\t\t\tpassword,\r\n\t\t\tcategoryId,\r\n\t\t};\r\n\t\tconsole.log(user);\r\n\t\taxios\r\n\t\t\t.post(`${api}/signup`, user)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { message } = res.data;\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNUP_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmessage: message,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\thistory.push(\"/signin\");\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"success\",\r\n\t\t\t\t\ttitle: res.data.message,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: userConstants.SIGNUP_FAILURE,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\terror: error.response.data.message,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\r\n\t\t\t\tToast.fire({\r\n\t\t\t\t\ticon: \"error\",\r\n\t\t\t\t\ttitle: error.response.data.message,\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Layout>\r\n\t\t\t<ThemeProvider theme={theme}>\r\n\t\t\t\t<div\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tposition: \"relative\",\r\n\t\t\t\t\t\tminHeight: \"80vh\",\r\n\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\tjustifyContent: \"center\",\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Container\r\n\t\t\t\t\t\tcomponent=\"main\"\r\n\t\t\t\t\t\tmaxWidth=\"xs\"\r\n\t\t\t\t\t\tid=\"signup-container\"\r\n\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<CssBaseline />\r\n\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\tsx={{\r\n\t\t\t\t\t\t\t\tmarginTop: 8,\r\n\t\t\t\t\t\t\t\tdisplay: \"flex\",\r\n\t\t\t\t\t\t\t\tflexDirection: \"column\",\r\n\t\t\t\t\t\t\t\talignItems: \"center\",\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n\t\t\t\t\t\t\t\tSign up\r\n\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\tcomponent=\"form\"\r\n\t\t\t\t\t\t\t\tnoValidate\r\n\t\t\t\t\t\t\t\t// onSubmit={handleSubmit}}\r\n\t\t\t\t\t\t\t\tsx={{ mt: 3 }}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"fullname\"\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={fullName}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"fullName\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Full Name\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetFullname(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={email}\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Email Address\"\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"email\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) =>\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetEmail(e.target.value)\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\t\t\t\terror={!isPasswordValidated}\r\n\t\t\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tvalue={password}\r\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\tconst value = e.target.value;\r\n\t\t\t\t\t\t\t\t\t\t\t\tsetPassword(e.target.value);\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (PASSWORD_VALIDATION_REGEXP.test(value)) {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsPasswordValidated(true);\r\n\t\t\t\t\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tsetIsPasswordValidated(false);\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t\t\thelperText=\"Password must have atleast 8 characters including 1 lowercase, 1 uppercase, 1 numeric, and 1 special character.\"\r\n\t\t\t\t\t\t\t\t\t\t\tautoComplete=\"new-password\"\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t\t\t\t<FormControl sx={{ width: 400 }}>\r\n\t\t\t\t\t\t\t\t\t\t\t<InputLabel id=\"demo-multiple-checkbox-label\" required helperText=\"Please select atleast 3 categories\">Categories</InputLabel>\r\n\t\t\t\t\t\t\t\t\t\t\t<Select\r\n\t\t\t\t\t\t\t\t\t\t\t\tlabelId=\"demo-multiple-checkbox-label\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tid=\"demo-multiple-checkbox\"\r\n\t\t\t\t\t\t\t\t\t\t\t\tmultiple\r\n\t\t\t\t\t\t\t\t\t\t\t\tvalue={categories}\r\n\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t\t\t\t\t\t\tinput={<OutlinedInput label=\"Categories\" />}\r\n\t\t\t\t\t\t\t\t\t\t\t\trenderValue={(selected) => {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tlet selectedOptions = \"\";\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tselected.forEach((el, idx) => selectedOptions += idx === selected.length - 1 ? `${el.name}` : `${el.name},`)\r\n\t\t\t\t\t\t\t\t\t\t\t\t\treturn selectedOptions\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t\tMenuProps={MenuProps}\r\n\t\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t\t{category.categories.map((cat) => (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<MenuItem fullWidth key={cat._id} value={{ name: cat.name, id: cat._id }}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Checkbox checked={categories.findIndex((el) => el.id === cat._id) > -1} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<ListItemText primary={cat.name} />\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t\t\t\t\t\t\t<FormHelperText>Please select atleast 3 categories</FormHelperText>\r\n\t\t\t\t\t\t\t\t\t\t</FormControl>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\r\n\r\n\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\tsx={{ mt: 3, mb: 2, padding: \"0.5rem 3rem\" }}\r\n\t\t\t\t\t\t\t\t\tonClick={handleSubmit}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\tSubmit\r\n\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t<Grid container justifyContent=\"flex-end\">\r\n\t\t\t\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t\t\t\t<Link to=\"/signin\" variant=\"body2\" style={{ cursor: \"pointer\", textDecoration: \"underline\" }}>\r\n\t\t\t\t\t\t\t\t\t\t\tAlready have an account? Sign in\r\n\t\t\t\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Container>\r\n\t\t\t\t</div>\r\n\t\t\t</ThemeProvider>\r\n\t\t</Layout>\r\n\t);\r\n}","import { userConstants } from \"../constants\";\r\n\r\nexport const isUserLoggedIn = () => {\r\n\treturn async (dispatch) => {\r\n\r\n\t\tconst user = window.localStorage.getItem(\"user\");\r\n\t\tif (user) {\r\n\t\t\tconst parseUser = JSON.parse(user);\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNIN_SUCCESS,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\tuser: parseUser,\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: userConstants.SIGNIN_FAILURE,\r\n\t\t\t\tpayload: {\r\n\t\t\t\t\terror: \"Failed to login\",\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n};\r\n","import { TextField, Typography, Button, Avatar, Chip } from \"@mui/material\";\r\nimport React, { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport Box from '@mui/material/Box';\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Layout from \"../../components/Layout\";\r\nimport { Editor } from \"@tinymce/tinymce-react\";\r\nimport axios from \"axios\";\r\nimport Lottie from \"lottie-web\";\r\nimport Toast from \"../../utils/swal\";\r\nimport { api } from \"../../urlConfig\";\r\n\r\n\r\nexport default function Question() {\r\n      const slug = useParams().slug;\r\n      const [question, setQuestion] = useState(null);\r\n      const [loading, setLoading] = useState(true);\r\n      const [editorData, setEditorData] = useState(\"\");\r\n      const [comments, setComments] = useState([]);\r\n      const [reply, setReply] = useState(\"\");\r\n\r\n      useEffect(async () => {\r\n            await axios\r\n                  .get(`${api}/question?slug=${slug}`)\r\n                  .then((res) => {\r\n                        setQuestion(res.data.question);\r\n                  })\r\n                  .catch((error) => {\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: error.response.data.message,\r\n                        });\r\n                        console.log(error);\r\n                  });\r\n      }, []);\r\n\r\n      useEffect(() => {\r\n            Lottie.loadAnimation({\r\n                  container: document.getElementById(\"lottieweb\"),\r\n                  renderer: \"svg\",\r\n                  loop: true,\r\n                  autoplay: true,\r\n                  animationData: require(\"../../images/84860-my-first-ever-lottie.json\"),\r\n                  rendererSettings: {\r\n                        className: \"lottieRenderer\",\r\n                  },\r\n            });\r\n      }, []);\r\n\r\n\r\n      const handleChange = (content, editor) => {\r\n            setEditorData(content);\r\n      };\r\n\r\n      const handleReply = (e) => {\r\n            const id = e.target.className;\r\n            question.solutionId.map((s) => {\r\n                  let tid = s._id;\r\n                  document.getElementById(tid).style.display = 'none';\r\n            })\r\n            setReply(\"\");\r\n            document.getElementById(id).style.display = 'block';\r\n\r\n      }\r\n\r\n      const hideReply = (e) => {\r\n            const id = e.target.value;\r\n            document.getElementById(id).style.display = 'none';\r\n      }\r\n\r\n      const scrollToBottom = () => {\r\n            window.scrollTo(0, document.body.scrollHeight);\r\n      };\r\n\r\n      const postReply = async (e, sol) => {\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n\r\n            setLoading(false);\r\n            e.preventDefault();\r\n            const solId = e.target.value;\r\n            const comment = {\r\n                  description: reply,\r\n                  solutionId: solId,\r\n            }\r\n            await axios.post(`${api}/:${solId}/addComment`, comment).then((res) => {\r\n                  document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                  setLoading(true);\r\n                  Toast.fire({\r\n                        icon: \"success\",\r\n                        title: res.data.message,\r\n                  });\r\n            }).catch((error) => {\r\n                  document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                  setLoading(true);\r\n                  Toast.fire({\r\n                        icon: \"error\",\r\n                        title: error.response.data.message,\r\n                  });\r\n            });\r\n\r\n            document.getElementById(solId).style.display = 'none';\r\n\r\n\r\n      }\r\n\r\n      const showReply = async (e) => {\r\n            setComments([]);\r\n            const id = e.target.className;\r\n            question.solutionId.map((s) => {\r\n                  let tid = s._id;\r\n                  document.getElementById(tid).style.display = 'none';\r\n            })\r\n            setReply(\"\");\r\n            document.getElementById(id).style.display = 'block';\r\n            await axios.get(`${api}/solution?id=${id}`).then((res) => {\r\n                  setComments(res.data.solution.commentsId)\r\n            }).catch((error) => {\r\n                  Toast.fire({\r\n                        icon: \"error\",\r\n                        title: error.response.data.message,\r\n                  });\r\n            })\r\n      }\r\n\r\n      const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n\r\n            const sol = {\r\n                  questionId: question._id,\r\n                  description: editorData,\r\n                  question: question,\r\n            };\r\n\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n\r\n            setLoading(false);\r\n            axios\r\n                  .post(`${api}/:${question._id}/addSolution`, sol)\r\n                  .then((res) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"success\",\r\n                              title: res.data.message,\r\n                        });\r\n                        window.location.reload();\r\n                  })\r\n                  .catch((error) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: error.response.data.message,\r\n                        });\r\n                  });\r\n      };\r\n\r\n      return (\r\n            <Layout>\r\n                  <Box mx={10}>\r\n                        <Box\r\n                              style={{\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                    marginTop: \"50px\",\r\n                                    alignItems: \"center\"\r\n                              }}\r\n                              mx={10}\r\n                        >\r\n                              <Typography\r\n\r\n                                    gutterBottom\r\n                                    variant=\"h5\"\r\n                                    component=\"div\"\r\n                                    style={{ fontWeight: \"bold\" }}\r\n\r\n                              >\r\n                                    {question === null ? \"\" : question.title}\r\n                              </Typography>\r\n                              <Button\r\n\r\n                                    onClick={scrollToBottom}\r\n                                    style={{\r\n                                          background: \"#1976d2\",\r\n                                          color: \"#fff\",\r\n                                          fontWeight: \"bold\",\r\n                                    }}\r\n\r\n                              >\r\n                                    Post a Solution\r\n                              </Button>\r\n                        </Box>\r\n                        <hr />\r\n                        {question === null ? (\r\n                              \"\"\r\n                        ) : (\r\n                              <Box\r\n                                    dangerouslySetInnerHTML={{\r\n                                          __html: question.description,\r\n                                    }}\r\n                                    mx={10}\r\n                              />\r\n                        )}\r\n                        {question === null ? (\r\n                              \"\"\r\n                        ) : (\r\n                              <Box mx={10}>\r\n                                    <Box mt={5}>\r\n                                          <Chip label={question.categoryId.name} color=\"primary\" textspacing=\"10\" />\r\n                                    </Box>\r\n                                    <Box\r\n                                          style={{\r\n                                                display: \"flex\",\r\n                                                width: \"100%\",\r\n                                                alignItems: \"end\",\r\n                                                flexDirection: \"column\",\r\n                                          }}\r\n                                    >\r\n                                          <h6>Posted By</h6>\r\n                                          <p style={{ margin: 0 }}>{question.authorID.fullName}</p>\r\n                                          <p>{question.authorID.email}</p>\r\n                                    </Box>\r\n                              </Box>\r\n                        )}\r\n                        <br />\r\n                        {question && question.solutionId.length > 0 ? (\r\n                              <Box mx={10}>\r\n                                    <h3>\r\n                                          Looking for the same question ? Go through some of the answers\r\n                                          below...!\r\n                                    </h3>\r\n                                    <h4>\r\n                                          {\" \"}\r\n                                          {question.solutionId.length === 1\r\n                                                ? `${question.solutionId.length} Answer`\r\n                                                : `${question.solutionId.length} Answers`}\r\n                                    </h4>\r\n                                    <br />\r\n                                    {question.solutionId.map((sol) => (\r\n                                          <Box key={sol._id}>\r\n                                                <Box variant=\"body2\" color=\"text.secondary\">\r\n                                                      <Box\r\n                                                            dangerouslySetInnerHTML={{\r\n                                                                  __html: sol.description,\r\n                                                            }}\r\n                                                      />\r\n                                                </Box>\r\n                                                <Box\r\n                                                      style={{\r\n                                                            display: \"flex\",\r\n                                                            width: \"100%\",\r\n                                                            justifyContent: \"space-between\"\r\n                                                      }}\r\n                                                >\r\n                                                      <Box style={{\r\n                                                            display: \"flex\",\r\n                                                            width: \"250px\",\r\n                                                            justifyContent: \"space-between\",\r\n                                                      }}>\r\n                                                            <button className={sol._id} style={{ backgroundColor: 'white', border: 'none', color: \"blue\" }} onClick={(e) => handleReply(e)}>Reply</button>\r\n                                                            <button className={sol._id} style={{ backgroundColor: 'white', border: 'none', color: \"blue\" }} onClick={(e) => showReply(e)}>Show comments</button>\r\n                                                      </Box>\r\n\r\n                                                      <Box textAlign=\"right\">\r\n                                                            <h6>Posted By</h6>\r\n                                                            <p style={{ margin: 0 }}>{sol.authorID.fullName}</p>\r\n                                                            <p>{sol.authorID.email}</p>\r\n                                                      </Box>\r\n\r\n                                                </Box>\r\n                                                <Box id={sol._id} style={{ width: '100%', display: 'none' }}>\r\n                                                      <List m={3} sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n                                                            {comments.length > 0 && comments.map((c) => (\r\n                                                                  <Box style={{ marginLeft: '50px' }} key={c._id}>\r\n                                                                        <ListItem divider alignItems=\"flex-start\">\r\n                                                                              <ListItemAvatar>\r\n                                                                                    <Avatar alt=\"Remy Sharp\" >\r\n                                                                                          {c.authorID.fullName[0]}\r\n                                                                                    </Avatar>\r\n                                                                              </ListItemAvatar>\r\n                                                                              <ListItemText\r\n                                                                                    primary={<React.Fragment>\r\n                                                                                          <Typography\r\n                                                                                                sx={{ display: 'inline' }}\r\n                                                                                                component=\"span\"\r\n                                                                                                variant=\"body2\"\r\n                                                                                                color=\"text.primary\"\r\n                                                                                          >\r\n                                                                                                {c.description}\r\n                                                                                          </Typography>\r\n\r\n                                                                                    </React.Fragment>}\r\n\r\n                                                                                    secondary={\r\n                                                                                          <React.Fragment>\r\n                                                                                                <Typography\r\n                                                                                                      sx={{ display: 'inline' }}\r\n                                                                                                      component=\"span\"\r\n                                                                                                      variant=\"body3\"\r\n                                                                                                      fontWeight='bold'\r\n                                                                                                      color=\"text.primary\"\r\n\r\n                                                                                                >\r\n                                                                                                      Posted by: {c.authorID.fullName}\r\n                                                                                                </Typography>\r\n\r\n                                                                                          </React.Fragment>\r\n                                                                                    }\r\n                                                                              />\r\n                                                                        </ListItem>\r\n\r\n                                                                  </Box>\r\n                                                            ))}\r\n                                                      </List>\r\n                                                      <Box>\r\n                                                            <TextField fullWidth label=\"Add a public reply\" variant=\"standard\" value={reply} onChange={(e) => setReply(e.target.value)} />\r\n                                                            <Box style={{ margin: '10px 0', display: \"flex\", justifyContent: \"right\" }}>\r\n                                                                  <Button className=\"homeButton\" value={sol._id} onClick={(e) => hideReply(e)} style={{ color: '#484848', fontWeight: 'bold' }}>Cancel</Button>\r\n                                                                  <Button className=\"homeButton\" value={sol._id} onClick={(e) => postReply(e, sol)} style={{ backgroundColor: '#e1e1e1', color: '#484848', fontWeight: 'bold' }}>Reply</Button>\r\n\r\n                                                            </Box>\r\n                                                      </Box>\r\n                                                </Box>\r\n\r\n\r\n                                                <hr />\r\n                                          </Box>\r\n                                    ))}\r\n                              </Box>\r\n                        ) : null\r\n                        }\r\n\r\n                        {\r\n                              question === null ? null : (\r\n                                    <Box mx={10}>\r\n                                          <form onSubmit={handleSubmit}>\r\n                                                <Editor\r\n                                                      apiKey={process.env.REACT_APP_EDITOR_KEY}\r\n                                                      value={editorData}\r\n                                                      init={{\r\n                                                            content_css: [\"./style.css\"],\r\n                                                            menubar: false,\r\n                                                            plugins: [\r\n                                                                  \"advlist autolink lists link image\",\r\n                                                                  \"charmap print preview anchor help\",\r\n                                                                  \"searchreplace visualblocks code\",\r\n                                                                  \"insertdatetime media table paste wordcount\",\r\n                                                            ],\r\n                                                            toolbar:\r\n                                                                  \"undo redo | formatselect | bold italic | \\\r\n        alignleft aligncenter alignright | \\\r\n        bullist numlist outdent indent | help\",\r\n                                                      }}\r\n                                                      onEditorChange={handleChange}\r\n                                                />\r\n                                                <Button\r\n                                                      type=\"submit\"\r\n                                                      style={{\r\n                                                            background: \"#1976d2\",\r\n                                                            color: \"#fff\",\r\n                                                            fontWeight: \"bold\",\r\n                                                            margin: \"10px\",\r\n                                                      }}\r\n                                                >\r\n                                                      Post a Solution\r\n                                                </Button>\r\n                                          </form>\r\n                                    </Box>\r\n                              )\r\n                        }\r\n                        <Box\r\n                              className=\"loadContainer\"\r\n                              style={\r\n                                    loading\r\n                                          ? {}\r\n                                          : {\r\n                                                position: \"fixed\",\r\n                                                backgroundColor: \"#00000040\",\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                                bottom: 0,\r\n                                                top: 0,\r\n                                                right: 0,\r\n                                                left: 0,\r\n                                                zIndex: 100,\r\n                                          }\r\n                              }\r\n                        >\r\n                              <Box\r\n                                    id=\"lottieweb\"\r\n                                    style={{ display: loading ? \"none\" : \"flex\" }}\r\n                              ></Box>\r\n                        </Box>\r\n                  </Box>\r\n\r\n            </Layout >\r\n      );\r\n}","import { TextField, Button } from '@mui/material';\r\nimport { Editor } from '@tinymce/tinymce-react';\r\nimport Lottie from 'lottie-web';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport axios from 'axios';\r\nimport Toast from '../../utils/swal';\r\nimport { api } from \"../../urlConfig\";\r\nimport './style.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst PostQuestion = () => {\r\n      const [title, setTitle] = useState(\"\");\r\n      const [category, setCategory] = useState(\"\");\r\n      const [editorData, setEditorData] = useState(\"\");\r\n      const [loading, setLoading] = useState(true);\r\n      const [loadEditor, setLoadEditor] = useState(false);\r\n      const isMountedRef = useIsMountedRef();\r\n      const history = useHistory()\r\n\r\n\r\n      useEffect(() => {\r\n            setTimeout(() => {\r\n                  if (isMountedRef.current) { setLoadEditor(true) };\r\n            }, 1000)\r\n      }, []);\r\n\r\n\r\n      useEffect(() => {\r\n            Lottie.loadAnimation({\r\n                  container: document.getElementById(\"lottieweb\"),\r\n                  renderer: \"svg\",\r\n                  loop: true,\r\n                  autoplay: true,\r\n                  animationData: require(\"../../images/84860-my-first-ever-lottie.json\"),\r\n                  rendererSettings: {\r\n                        className: \"lottieRenderer\",\r\n                  },\r\n            });\r\n      }, []);\r\n\r\n      const handleChange = (content, editor) => {\r\n            setEditorData(content);\r\n      };\r\n\r\n\r\n\r\n      const handleSubmit = (event) => {\r\n            event.preventDefault();\r\n\r\n            const question = {\r\n                  title,\r\n                  description: editorData,\r\n                  category,\r\n            };\r\n\r\n\r\n            document.getElementsByTagName(\"html\")[0].style.overflow = \"hidden\";\r\n            setLoading(false);\r\n            axios\r\n                  .post(`${api}/question/create`, question)\r\n                  .then((res) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n\r\n                        Toast.fire({\r\n                              icon: \"success\",\r\n                              title: res.data.message,\r\n                        });\r\n\r\n                        history.push(`/question/${res.data.question._question.slug}`)\r\n\r\n                  })\r\n                  .catch((error) => {\r\n                        document.getElementsByTagName(\"html\")[0].removeAttribute(\"style\");\r\n                        setLoading(true);\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: error.response.data.message,\r\n                        });\r\n                  });\r\n      };\r\n\r\n\r\n      return (\r\n            <Layout>\r\n                  <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', width: \"80vw\", margin: \"auto\" }}>\r\n                        <form style={{ width: '100%' }} onSubmit={handleSubmit}>\r\n                              <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Question Title\"\r\n                                    name=\"title\"\r\n                                    autoComplete=\"title\"\r\n                                    value={title}\r\n                                    onChange={(e) => setTitle(e.target.value)}\r\n                                    autoFocus\r\n                              />\r\n                              <TextField\r\n                                    margin=\"normal\"\r\n                                    required\r\n                                    fullWidth\r\n                                    id=\"title\"\r\n                                    label=\"Category\"\r\n                                    name=\"Category\"\r\n                                    autoComplete=\"Category\"\r\n                                    value={category}\r\n                                    onChange={(e) => setCategory(e.target.value)}\r\n                                    autoFocus\r\n                              />\r\n                              {loadEditor ? <Editor\r\n                                    apiKey={process.env.REACT_APP_EDITOR_KEY}\r\n                                    value={editorData}\r\n                                    init={{\r\n                                          content_css: [\"./style.css\"],\r\n                                          menubar: false,\r\n                                          plugins: [\r\n                                                \"advlist autolink lists link image\",\r\n                                                \"charmap print preview anchor help\",\r\n                                                \"searchreplace visualblocks code\",\r\n                                                \"insertdatetime media table paste wordcount\",\r\n                                          ],\r\n                                          toolbar:\r\n                                                \"undo redo | formatselect | bold italic | \\\r\n                              alignleft aligncenter alignright | \\\r\n                              bullist numlist outdent indent | help\",\r\n                                    }}\r\n                                    onEditorChange={handleChange}\r\n                              /> : null}\r\n                              <Button\r\n                                    type=\"submit\"\r\n                                    style={{\r\n                                          background: \"#1976d2\",\r\n                                          color: \"#fff\",\r\n                                          fontWeight: \"bold\",\r\n                                          margin: \"10px 0\",\r\n                                    }}\r\n                              >\r\n                                    Post a Question\r\n                              </Button>\r\n\r\n                        </form>\r\n                  </div>\r\n                  <div\r\n                        className=\"loadContainer\"\r\n                        style={\r\n                              loading\r\n                                    ? {}\r\n                                    : {\r\n                                          position: \"fixed\",\r\n                                          backgroundColor: \"#00000040\",\r\n                                          display: \"flex\",\r\n                                          alignItems: \"center\",\r\n                                          justifyContent: \"center\",\r\n                                          bottom: 0,\r\n                                          top: 0,\r\n                                          right: 0,\r\n                                          left: 0,\r\n                                          zIndex: 100,\r\n                                    }\r\n                        }\r\n                  >\r\n                        <div\r\n                              id=\"lottieweb\"\r\n                              style={{ display: loading ? \"none\" : \"flex\" }}\r\n                        ></div>\r\n                  </div>\r\n\r\n            </Layout >\r\n      );\r\n}\r\n\r\nexport default PostQuestion;\r\n","import {\r\n      Avatar,\r\n      Card,\r\n      CardContent,\r\n      CardHeader,\r\n      Typography,\r\n} from \"@mui/material\";\r\nimport { red } from \"@mui/material/colors\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { api } from \"../../urlConfig\";\r\nimport getLongDate from \"../../utils/date\";\r\nimport Toast from \"../../utils/swal\"\r\n\r\n\r\nconst Category = () => {\r\n      const slug = useParams().slug;\r\n      const [question, setQuestion] = useState([]);\r\n\r\n      useEffect(async () => {\r\n            await axios\r\n                  .get(`${api}/category?slug=${slug}`)\r\n                  .then((res) => {\r\n                        let q = [];\r\n                        q.push(...res.data.questions);\r\n                        setQuestion(q);\r\n\r\n                  })\r\n                  .catch((error) => {\r\n                        Toast.fire({\r\n                              icon: \"error\",\r\n                              title: error.response.data.message,\r\n                        });\r\n                        console.log(error);\r\n                  });\r\n      }, [slug]);\r\n\r\n      return (\r\n            <Layout>\r\n                  {question.length < 1 ? null :\r\n                        <div className=\"homeContainer\">\r\n                              {question.map((q) => (\r\n                                    <Link\r\n                                          to={`/question/${q.slug}`}\r\n                                          replace\r\n                                          key={q._id}\r\n                                          style={{ textDecoration: \"none\" }}\r\n                                          className=\"homeLink\"\r\n                                    >\r\n                                          <Card sx={{ maxWidth: 345 }}>\r\n                                                <CardHeader\r\n                                                      avatar={\r\n                                                            <Avatar sx={{ bgcolor: red[500] }} aria-label=\"recipe\">\r\n                                                                  {q.authorID.fullName.charAt(0)}\r\n                                                            </Avatar>\r\n                                                      }\r\n                                                      title={q.authorID.fullName}\r\n                                                      subheader={getLongDate(q.createdAt)}\r\n                                                />\r\n                                                <CardContent>\r\n                                                      <Typography\r\n                                                            className=\"description\"\r\n                                                            variant=\"body2\"\r\n                                                            color=\"text.secondary\"\r\n                                                            dangerouslySetInnerHTML={{\r\n                                                                  __html: q.description,\r\n                                                            }}\r\n                                                      />\r\n                                                      <hr />\r\n                                                      <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                            {q.solutionId.length} {q.solutionId.length > 1 ? \"Solutions\" : \"Solution\"}\r\n                                                      </Typography>\r\n                                                </CardContent>\r\n                                          </Card>\r\n                                    </Link>\r\n                              ))}\r\n                        </div>\r\n                  }\r\n            </Layout>\r\n      );\r\n};\r\n\r\nexport default Category;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Layout from '../../components/Layout';\r\n\r\nimport { Grid, Typography, CardContent, Card } from \"@mui/material\";\r\nimport { Box } from \"@mui/system\";\r\nimport Profile from '../../components/Profile';\r\nimport { api } from '../../urlConfig';\r\nimport axios from 'axios';\r\nimport { Link } from \"react-router-dom\";\r\nimport './style.css'\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport getLongDate from '../../utils/date';\r\nimport Toast from '../../utils/swal';\r\n\r\n\r\nconst UserQuestion = () => {\r\n\r\n      const [questions, setQuestions] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/questions`).then((res) => {\r\n                  if (isMountedRef.current) setQuestions(res.data.user.questionId);\r\n            }).catch((error) => {\r\n                  Toast.fire({\r\n                        icon: \"error\",\r\n                        title: error.response.data.message,\r\n                  });\r\n                  console.log(error);\r\n\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {questions && questions.map((q) => (\r\n                                                            <Link to={`/question/${q.slug}`} replace key={q._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a question\r\n                                                                                    <b>{` ${q.title} `}</b>\r\n                                                                                    on {`${getLongDate(q.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n                                                                                    dangerouslySetInnerHTML={{\r\n                                                                                          __html: q.description,\r\n                                                                                    }}\r\n\r\n                                                                              />\r\n\r\n                                                                              <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {q.solutionId.length} {q.solutionId.length > 1 ? \"Solutions\" : \"Solution\"}\r\n                                                                              </Typography>\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n                              </Grid>\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n}\r\n\r\nexport default UserQuestion;\r\n","import { CardContent, Grid, Typography, Card } from '@mui/material';\r\nimport { Box } from '@mui/system';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Layout from '../../components/Layout';\r\nimport Profile from '../../components/Profile';\r\nimport { api } from '../../urlConfig';\r\nimport useIsMountedRef from '../../utils/asyncSubscriptionCancel';\r\nimport getLongDate from '../../utils/date';\r\nimport Toast from '../../utils/swal';\r\n\r\nconst UserSolution = () => {\r\n\r\n      const [solutions, setSolutions] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/solutions`).then((res) => {\r\n                  // setQuestions(res.data.user.questionId);\r\n                  if (isMountedRef.current) setSolutions(res.data.user.solutionId);\r\n\r\n            }).catch((error) => {\r\n                  Toast.fire({\r\n                        icon: \"error\",\r\n                        title: error.response.data.message,\r\n                  });\r\n                  console.log(error);\r\n\r\n            })\r\n      }, [])\r\n\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {solutions && solutions.map((s) => (\r\n                                                            <Link to={`/question/${s.questionId.slug}`} replace key={s._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a solution to\r\n                                                                                    <b>{` ${s.questionId.title} `}</b>\r\n                                                                                    on {`${getLongDate(s.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n                                                                                    dangerouslySetInnerHTML={{\r\n                                                                                          __html: s.description,\r\n                                                                                    }}\r\n\r\n                                                                              />\r\n\r\n                                                                              <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {s.commentsId.length} {s.commentsId.length > 1 ? \"Comments\" : \"Comment\"}\r\n                                                                              </Typography>\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n\r\n                              </Grid>\r\n\r\n\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n}\r\n\r\nexport default UserSolution;\r\n","import { Grid } from \"@mui/material\";\r\nimport { CardContent, Typography, Card } from '@mui/material';\r\nimport { Box } from \"@mui/system\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Profile from \"../../components/Profile\";\r\nimport { api } from \"../../urlConfig\";\r\nimport { Link } from 'react-router-dom';\r\nimport useIsMountedRef from \"../../utils/asyncSubscriptionCancel\";\r\nimport getLongDate from \"../../utils/date\";\r\nimport Toast from \"../../utils/swal\";\r\n\r\n\r\nconst returnShortString = (s) => {\r\n      const arr = s.split(\" \");\r\n      let ans = \"\";\r\n      for (let i = 0; i < arr.length && i < 4; i++) {\r\n            ans += arr[i] + \" \"\r\n      }\r\n      return ans + \"...\";\r\n}\r\nconst UserComment = () => {\r\n      const [comments, setComments] = useState([]);\r\n      const isMountedRef = useIsMountedRef();\r\n\r\n      useEffect(() => {\r\n            axios.get(`${api}/user/comments`).then((res) => {\r\n\r\n                  if (isMountedRef.current) setComments(res.data.user.commentId);\r\n\r\n            }).catch((error) => {\r\n                  Toast.fire({\r\n                        icon: \"error\",\r\n                        title: error.response.data.message,\r\n                  });\r\n                  console.log(error);\r\n\r\n            })\r\n      }, [])\r\n      return (\r\n            <Layout>\r\n                  <div>\r\n                        <Box sx={{ flexGrow: 1 }}>\r\n                              <Grid container>\r\n                                    <Grid\r\n                                          display=\"flex\"\r\n                                          flexDirection=\"column\"\r\n                                          alignItems=\"center\"\r\n                                          item\r\n                                          xs={12}\r\n                                          md={3}\r\n                                    >\r\n                                          <Profile />\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={12} md={9}>\r\n                                          <Box style={{ borderLeft: '1px solid #e1e1e1', margin: \"30px\", padding: \"20px\" }}>\r\n                                                <div>\r\n                                                      {comments && comments.map((c) => (\r\n                                                            <Link to={`/question/${c.solutionId.questionId.slug}`} replace key={c._id} style={{ textDecoration: 'none', margin: \"20px\" }} >\r\n                                                                  <Card >\r\n\r\n\r\n                                                                        <CardContent>\r\n                                                                              <Typography>\r\n                                                                                    You posted a comment to\r\n                                                                                    <b>{` ${returnShortString(c.solutionId.description)} `}</b>\r\n                                                                                    on {`${getLongDate(c.createdAt)}`}\r\n                                                                              </Typography>\r\n                                                                              <hr />\r\n\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\" className=\"questioncard\"\r\n\r\n                                                                              >{c.description}</Typography>\r\n\r\n                                                                              {/* <hr />\r\n                                                                              <Typography variant=\"body2\" color=\"text.secondary\">\r\n                                                                                    {s.commentsId.length} comments\r\n                                                                              </Typography> */}\r\n                                                                        </CardContent>\r\n                                                                  </Card>\r\n                                                            </Link>\r\n                                                      ))}\r\n                                                </div>\r\n\r\n                                          </Box>\r\n                                    </Grid>\r\n\r\n                              </Grid>\r\n\r\n\r\n\r\n                        </Box>\r\n                  </div>\r\n            </Layout>\r\n      );\r\n};\r\n\r\nexport default UserComment;\r\n","import \"./App.css\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport PrivateRoute from \"./components/HOC/privateRoute\";\r\nimport Home from \"./pages/Home\";\r\nimport Signin from \"./pages/Signin\";\r\nimport Signup from \"./pages/Signup\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { categoryConstants } from \"./constants\";\r\nimport { isUserLoggedIn } from \"./utils/user.action\";\r\nimport Question from \"./pages/Question\";\r\nimport PostQuestion from \"./pages/PostQuestion\";\r\nimport { api } from \"./urlConfig\";\r\nimport Category from \"./pages/Category\";\r\nimport UserQuestion from \"./pages/UserQuestion\";\r\nimport UserSolution from \"./pages/UserSolution\";\r\nimport UserComment from \"./pages/UserComment\";\r\n\r\nfunction App() {\r\n\tconst auth = useSelector((state) => {\r\n\t\treturn state.auth;\r\n\t});\r\n\tconst dispatch = useDispatch();\r\n\r\n\tuseEffect(() => {\r\n\t\tif (!auth.authenticate) {\r\n\t\t\tdispatch(isUserLoggedIn());\r\n\t\t}\r\n\r\n\t\taxios\r\n\t\t\t.get(`${api}/category/getCategory`)\r\n\t\t\t.then((res) => {\r\n\t\t\t\tconst { categories } = res.data;\r\n\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_SUCCESS,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\tmessage: categories,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch((error) => {\r\n\t\t\t\tdispatch({\r\n\t\t\t\t\ttype: categoryConstants.GET_ALL_CATEGORIES_FAILURE,\r\n\t\t\t\t\tpayload: {\r\n\t\t\t\t\t\terror: error.response,\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Switch>\r\n\t\t\t\t<PrivateRoute path=\"/\" exact component={Home} />\r\n\t\t\t\t<PrivateRoute path=\"/postQuestion\" exact component={PostQuestion} />\r\n\t\t\t\t<Route path=\"/signin\" exact component={Signin} />\r\n\t\t\t\t<Route path=\"/signup\" exact component={Signup} />\r\n\t\t\t\t<Route path=\"/question/:slug\" exact component={Question} />\r\n\t\t\t\t<Route path=\"/category/:slug\" exact component={Category} />\r\n\t\t\t\t<PrivateRoute path=\"/user/questions\" exact component={UserQuestion} />\r\n\t\t\t\t<PrivateRoute path=\"/user/solutions\" exact component={UserSolution} />\r\n\t\t\t\t<PrivateRoute path=\"/user/comments\" exact component={UserComment} />\r\n\t\t\t</Switch>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { userConstants } from \"../constants\";\r\n\r\nconst initState = {\r\n\tauthenticate: false,\r\n\tauthenticating: false,\r\n\tmessage: \"\",\r\n\terror: null,\r\n\tuser: {}\r\n};\r\n\r\nconst authReducer = (state = initState, action) => {\r\n\tconsole.log(action);\r\n\tswitch (action.type) {\r\n\t\tcase userConstants.SIGNIN_REQUEST:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tauthenticating: true,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNIN_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload.user,\r\n\t\t\t\tauthenticate: true,\r\n\t\t\t\tauthenticating: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNIN_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t\terror: action.payload.error,\r\n\t\t\t\tauthenticating: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNOUT_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.SIGNOUT_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase userConstants.USER_UPDATE:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tuser: action.payload.user\r\n\t\t\t}\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default authReducer;\r\n","import { categoryConstants } from \"../constants\";\r\n\r\nconst initState = {\r\n\tcategories: [],\r\n\tloading: false,\r\n\terror: null,\r\n};\r\n\r\nconst categoryReducer = (state = initState, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_REQUEST:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tloading: true,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_SUCCESS:\r\n\t\t\tstate = {\r\n\t\t\t\t...state,\r\n\t\t\t\tcategories: action.payload.message.categories,\r\n\t\t\t\tloading: false,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t\tcase categoryConstants.GET_ALL_CATEGORIES_FAILURE:\r\n\t\t\tstate = {\r\n\t\t\t\t...initState,\r\n\t\t\t\terror: action.payload.error,\r\n\t\t\t};\r\n\t\t\tbreak;\r\n\t}\r\n\r\n\treturn state;\r\n};\r\n\r\nexport default categoryReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth.reducer\";\r\nimport categoryReducer from \"./category.reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n\tauth: authReducer,\r\n\tcategory: categoryReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"../reducers\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./store\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<Router>\r\n\t\t\t<React.StrictMode>\r\n\t\t\t\t<App />\r\n\t\t\t</React.StrictMode>\r\n\t\t</Router>\r\n\t</Provider>,\r\n\tdocument.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}